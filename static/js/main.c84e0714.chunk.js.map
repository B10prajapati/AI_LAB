{"version":3,"sources":["components/Grid.module.css","features/aStarSearch/aStarSearchSlice.js","features/graph/graphSlice.js","features/chatbot/chatbotSlice.js","features/waterjug/WaterjugClass.js","features/waterjug/waterjugSlice.js","features/aStarSearch/aStarSearchAlgorithm.js","features/aStarSearch/constants.js","features/aStarSearch/presets.js","app/store.js","features/graph/GraphClass.js","components/GraphNode.jsx","components/GraphTree.jsx","features/graph/Graph.js","components/CodeBlock.jsx","snippets/index.js","pages/lab2/lab2.js","features/waterjug/Waterjug.jsx","features/waterjug/WaterjugComponent.js","pages/lab3/lab3.js","components/ListRouter.jsx","components/SettingsModal.jsx","components/Controls.jsx","components/TooltipContent.jsx","components/GridCell.jsx","components/SearchGrid.jsx","features/aStarSearch/AStarSearch.js","pages/lab4/lab4.js","features/chatbot/Chatbot.js","features/chatbot/ChatbotClass.js","pages/lab5/lab5.js","pages/home/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","width","height","graphSlice","createSlice","name","initialState","node","graph","selectedNode","DFSPath","BFSPath","reducers","addNode","state","action","payload","push","length","resetGraph","removeNode","changeHighlightedNode","index","showDFS","showBFS","actions","selectNode","selectGraph","selectHighlightedNode","selectBFSPath","selectDFSPath","chatbotSlice","require","question","answer","messageHistory","addQuestion","addAnswer","reset","selectMessageHistory","chatbot","WaterJugClass","x","y","target","printVolume","console","log","printPath","path","appendPath","pour","yJug","capY","xJug","rule","temp","capX","pourRule","step","reverseJugCapacity","solve","this","d","waterjug","waterjugSlice","capacityX","capacityY","addCapacityX","addCapacityY","addTarget","computePath","selectCapacityX","selectCapacityY","selectPath","range","minBy","remove","coordinatesToCheck","getDistance","a","b","colOffset","Math","abs","rowOffset","numberOfStraightSegments","max","mainGrid","start","end","numberOfColumns","value","gridLength","counter","openList","grid","fCost","gCost","hCost","parent","undefined","isClosed","isPath","map","currentCell","c","curr","forEach","status","neighbourCell","gCostIsBest","find","Mode","E","B","BLANK","_","RANDOM","random","LABYRINTH","A_STAR","_changePreset","preset","aStarSearchSlice","mode","setCellAsBlocked","setMode","setStart","setEnd","calculatePath","clearGrid","changePreset","selectGrid","aStarSearch","selectMode","selectStart","selectEnd","selectPreset","configureStore","reducer","graphReducer","waterjugReducer","chatbotReducer","aStarSearchReducer","Graph","addEdge","newNode","DFS","key","rev","dfs","stack","popped","pop","childData","slice","reverse","i","BFS","queue","bfs","shift","GraphNode","props","x_position","y_position","dispatch","useDispatch","strokeColor","useSelector","onClick","cx","cy","r","stroke","strokeWidth","fill","fillOpacity","textAnchor","GraphTree","len","parentName","parentIndex","renderChildrenList","childObject","childList","countChildren","object","count","Object","keys","varSpacing","g","React","memo","nodeList","highlightedNode","useState","nodeName","setNodeName","handleNewNodeSubmit","includes","Grid","direction","container","spacing","item","Card","CardContent","Typography","variant","data","CardActions","TextField","label","plaardceholder","aria-label","onChange","e","onKeyPress","Button","align","window","innerWidth","TabPanel","children","other","role","hidden","id","aria-labelledby","CodeBlock","setValue","tabNameList","tabCodeSnippetList","language","CardHeader","title","Tabs","event","newValue","Tab","a11yProps","codeSnippet","style","dracula","lineProps","wordBreak","whiteSpace","wrapLines","snippets","Lab2","xs","Link","color","href","WaterjugComponent","forwardRef","ref","capacity","waterVolume","setWaterVolume","emptyWaterVolume","setEmptyWaterVolume","toggle","setToggle","toggleRender","setToggleRender","waterLevel","setWaterLevel","temporaryLevel","setTemporaryLevel","useImperativeHandle","drop","toggleButton","empty","useEffect","rise","waterRatio","previousRatio","TweenMax","fromTo","attr","repeat","ease","Linear","easeNone","emptyWaterRatio","data-name","xmlns","viewBox","patternContentUnits","opacity","className","mask","fontSize","refX","useRef","refY","setCapacityX","setCapacityY","jugX","setJugX","jugY","setJugY","prevJugX","setPrevJugX","prevJugY","setPrevJugY","setTarget","sleep","ms","Promise","resolve","setTimeout","waitLoop","tempX","tempY","current","handleSubmit","functionArguement","parameters","xl","justify","alignItems","sm","Waterjug","type","parseInt","Lab3","ListItemLink","icon","primary","to","renderLink","useMemo","itemProps","ListItem","button","component","ListItemIcon","ListItemText","useStyles","makeStyles","root","flex","withRouter","classes","Paper","elevation","List","Divider","AccountTreeOutlined","FilterListOutlined","SearchOutlined","MessageOutlined","InfoOutlined","rand","round","getModalStyle","top","left","transform","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","SettingsModal","isOpen","setOpen","modalStyle","startIcon","outline","Modal","open","onClose","Container","text","disabled","Controls","StopOutlined","PlayArrowOutlined","ClearAllOutlined","Table","TableBody","TableRow","TableCell","TableContainer","TooltipContent","cell","getLabel","rowIndex","colIndex","onCellClick","isChecked","animationOffset","cn","styles","gridCell","closed","checked","animationDelay","Tooltip","gridTooltip","SearchGrid","isPressed","setIsPressed","onMouseDown","onMouseUp","document","addEventListener","removeEventListener","gridRoot","gridTable","row","AStarSearchComponent","AStarSearch","addQuestionsAnswer","questions","stemSentence","sentence","natural","PorterStemmer","tokenizeAndStem","ask","toLowerCase","trim","ques","questionWordList","match","quesWordList","word","bestQuestionMatch","indexOf","listQuestions","questionList","initiateChat","orange","getContrastText","deepOrange","purple","deepPurple","setQuestion","handleAskQuestion","lg","subheader","avatar","Avatar","message","Lab5","display","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","body","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","ModalProps","keepMounted","xsDown","exact","from","render","createMuiTheme","main","light","dark","contrastText","secondary","titleBar","error","red","A400","App","ThemeProvider","store","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","getElementById","URL","process","origin","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,SAAW,uBAAuB,YAAc,0BAA0B,QAAU,sBAAsB,QAAU,sBAAsB,MAAQ,oBAAoB,IAAM,kBAAkB,cAAgB,4BAA4B,OAAS,qBAAqB,aAAe,2BAA2B,KAAO,mBAAmB,WAAa,yBAAyB,YAAc,4B,4CCK/ZC,EAAOC,E,4GCJxBC,EAAaC,sBAAY,CAC7BC,KAAM,QACNC,aAAc,CACZC,KAAM,GACNC,MAAO,GACPC,aAAc,EACdC,QAAS,GACTC,QAAS,IAEXC,SAAU,CACRC,QAAS,SAACC,EAAOC,GAAY,IACnBP,EAA8BM,EAA9BN,MAAOD,EAAuBO,EAAvBP,KAAME,EAAiBK,EAAjBL,aACbJ,EAASU,EAAOC,QAAhBX,KACRS,EAAMP,KAAKU,KAAKZ,GAEZA,IAASE,EAAKE,KAChBD,EAAMD,EAAKE,IAAX,2BACKD,EAAMD,EAAKE,KADhB,kBAEGF,EAAKW,OAAS,EAAIb,MAIzBc,WAAY,SAACL,EAAOC,GAClBD,EAAMP,KAAO,GACbO,EAAMN,MAAQ,GACdM,EAAML,aAAe,EACrBK,EAAMJ,QAAU,GAChBI,EAAMH,QAAU,IAElBS,WAAY,SAACN,EAAOC,KACpBM,sBAAuB,SAACP,EAAOC,GAC7BD,EAAML,aAAeM,EAAOC,QAAQM,OAEtCC,QAAS,SAACT,EAAOC,GACfD,EAAMJ,QAAUK,EAAOC,QAAQN,SAEjCc,QAAS,SAACV,EAAOC,GACfD,EAAMH,QAAUI,EAAOC,QAAQL,Y,EAYjCR,EAAWsB,QANbZ,E,EAAAA,QAEAU,G,EADAH,W,EACAG,SACAC,E,EAAAA,QACAH,E,EAAAA,sBACAF,E,EAAAA,WAGWO,EAAa,SAACZ,GAAD,OAAWA,EAAMN,MAAMD,MACpCoB,EAAc,SAACb,GAAD,OAAWA,EAAMN,MAAMA,OACrCoB,EAAwB,SAACd,GAAD,OAAWA,EAAMN,MAAMC,cAC/CoB,EAAgB,SAACf,GAAD,OAAWA,EAAMN,MAAMG,SACvCmB,EAAgB,SAAChB,GAAD,OAAWA,EAAMN,MAAME,SAErCP,IAAf,QCzDM4B,GAAe3B,EAFG4B,EAAQ,IAAxB5B,aAEyB,CAC/BC,KAAM,UACNC,aAAc,CACZ2B,SAAU,GACVC,OAAQ,GACRC,eAAgB,IAElBvB,SAAU,CACRwB,YAAa,SAACtB,EAAOC,GACnBD,EAAMmB,SAAWlB,EAAOC,QAAQiB,SAChCnB,EAAMqB,eAAelB,KAAKF,EAAOC,QAAQiB,WAE3CI,UAAW,SAACvB,EAAOC,GACjBD,EAAMoB,OAASnB,EAAOC,QAAQkB,OAC9BpB,EAAMqB,eAAelB,KAAKF,EAAOC,QAAQkB,SAE3CI,MAAO,SAACxB,EAAOC,GACbD,EAAMqB,eAAiB,GACvBrB,EAAMoB,OAAS,GACfpB,EAAMmB,SAAW,O,EAK0BF,EAAaN,QAA/CW,E,EAAAA,YAAaC,E,EAAAA,UAIfE,G,EAJ0BD,MAIH,SAACxB,GAAD,OAAWA,EAAM0B,QAAQL,iBAE9CJ,IAAf,Q,kCCkLeU,E,WAjNb,aAAiC,IAAD,OAApBC,EAAoB,uDAAlB,EAAGC,EAAe,uDAAb,EAAGC,EAAU,uDAAH,EAAG,yBA8FhCC,YAAc,WACZC,QAAQC,IAAR,gBAAqB,EAAKL,EAA1B,kBAAqC,EAAKC,EAA1C,OA/F8B,KAkGhCK,UAAY,WAAO,IAAD,gBACE,EAAKC,MADP,IAChB,2BAA6B,CAAC,IAArBnC,EAAoB,QACvBA,IAAU,EAAKmC,MAAM,IACvBH,QAAQC,IAAR,iBAAsBjC,EAAM,GAA5B,kBAAwCA,EAAM,GAA9C,OAHY,gCAlGc,KA4GhCoC,WAAa,WACX,EAAKD,KAAKhC,KAAK,CAAC,EAAKyB,EAAG,EAAKC,KA7GC,KA+GhCL,MAAQ,WACN,EAAKI,EAAI,EACT,EAAKC,EAAI,EACT,EAAKM,KAAO,IAlHkB,KAoHhCE,KAAO,WACL,EAAKb,QACL,IAAIc,EAAO,EAAKC,KACZC,EAAO,EACX,EAAKC,KAAK,GAEV,MAAQ,EAAKX,SAAWQ,IAAS,EAAKR,SAAWU,GAAM,CACrDR,QAAQC,IAAR,WAAgBO,EAAhB,YAAwBF,EAAxB,MACA,IAAII,EAAO,EAoBX,GAnBIJ,EAAO,EAAKK,KAAOH,GACrBE,EAAOJ,EAEJ,EAAKG,KAAK,KAEbC,EAAO,EAAKC,KAAOH,EACnB,EAAKC,KAAK,IAGZD,GAAcE,EACdJ,GAAcI,EAMdV,QAAQC,IAAR,WAAgBO,EAAhB,YAAwBF,EAAxB,MAEc,EACVA,IAAS,EAAKR,QAAUU,IAAS,EAAKV,OACxC,MAEW,IAATQ,IACFA,EAAO,EAAKC,KACZ,EAAKE,KAAK,GACI,GAEZD,IAAS,EAAKG,OAChBH,EAAO,EACP,EAAKC,KAAK,GACI,KA3JY,KAgKhCG,SAAW,WACT,EAAKpB,QACL,EAAKiB,KAAK,GAEV,IADA,IAAII,EAAO,EAEL,EAAKhB,IAAM,EAAKC,QAAU,EAAKF,IAAM,EAAKE,SAG1C,EAAKD,EAAI,EAAKc,KAAO,EAAKf,EAC5B,EAAKa,KAAK,GAEV,EAAKA,KAAK,GAEZI,GAAc,EACV,EAAKhB,IAAM,EAAKC,QAAU,EAAKF,IAAM,EAAKE,SAG/B,IAAX,EAAKD,IACP,EAAKY,KAAK,GACVI,GAAc,GAEZ,EAAKjB,IAAM,EAAKe,OAClB,EAAKF,KAAK,GACVI,GAAc,GAIlB,OAAOA,GA3LuB,KA8LhCC,mBAAqB,WACnB,IAAMJ,EAAO,EAAKC,KAElB,EAAKA,KAAO,EAAKJ,KACjB,EAAKA,KAAOG,GAlMkB,KAqMhCK,MAAQ,WACNf,QAAQC,IAAR,4BAAiC,EAAKU,KAAtC,6BAA+D,EAAKJ,OACpEP,QAAQC,IAAR,gCAAqC,EAAKW,aAC1C,EAAKV,YACLF,QAAQC,IAAI,KACZD,QAAQC,IAAR,4BAAiC,EAAKU,KAAtC,6BAA+D,EAAKJ,OACpE,EAAKO,qBACLd,QAAQC,IAAR,gCAAqC,EAAKW,aAC1C,EAAKV,aA5MLc,KAAKL,KAAOf,EACZoB,KAAKT,KAAOV,EACZmB,KAAKpB,EAAI,EACToB,KAAKnB,EAAI,EACTmB,KAAKlB,OAASA,EACdkB,KAAKb,KAAO,G,iDAETP,GAAW,IAARqB,EAAO,uDAAH,EAGV,OAFAD,KAAKjB,cACLC,QAAQC,IAAR,eAAoBL,IACZA,GACN,KAAK,EACCoB,KAAKpB,EAAIoB,KAAKL,OAChBK,KAAKpB,EAAIoB,KAAKL,MAEhBX,QAAQC,IAAI,wBACZ,MAEF,KAAK,EACCe,KAAKnB,EAAImB,KAAKT,OAChBS,KAAKnB,EAAImB,KAAKT,MAEhBP,QAAQC,IAAI,wBACZ,MAGF,KAAK,EACCe,KAAKpB,EAAI,IACXoB,KAAKpB,EAAIoB,KAAKpB,EAAIqB,GAEpBjB,QAAQC,IAAI,+BACZ,MAEF,KAAK,EACCe,KAAKnB,EAAI,IACXmB,KAAKnB,EAAImB,KAAKnB,EAAIoB,GAEpBjB,QAAQC,IAAI,+BACZ,MAEF,KAAK,EACCe,KAAKpB,EAAI,IACXoB,KAAKpB,EAAI,GAEXI,QAAQC,IAAI,cACZ,MAEF,KAAK,EACCe,KAAKnB,EAAI,IACXmB,KAAKnB,EAAI,GAEXG,QAAQC,IAAI,cACZ,MAEF,KAAK,EACCe,KAAKpB,EAAIoB,KAAKnB,EAAImB,KAAKL,KAAOK,KAAKT,OACrCS,KAAKnB,EAAImB,KAAKnB,GAAKmB,KAAKL,KAAOK,KAAKpB,GACpCoB,KAAKpB,EAAIoB,KAAKL,MAEhBX,QAAQC,IAAI,+BACZ,MAEF,KAAK,EACCe,KAAKpB,EAAIoB,KAAKnB,EAAImB,KAAKL,KAAOK,KAAKT,OACrCS,KAAKpB,EAAIoB,KAAKpB,GAAKoB,KAAKT,KAAOS,KAAKnB,GACpCmB,KAAKnB,EAAImB,KAAKT,MAEhBP,QAAQC,IAAI,+BACZ,MAEF,KAAK,EACCe,KAAKpB,EAAIoB,KAAKnB,EAAImB,KAAKL,OACzBK,KAAKpB,EAAIoB,KAAKpB,EAAIoB,KAAKnB,EACvBmB,KAAKnB,EAAI,GAEXG,QAAQC,IAAI,8BACZ,MAEF,KAAK,GACCe,KAAKpB,EAAIoB,KAAKnB,EAAImB,KAAKT,OACzBS,KAAKpB,EAAI,EACToB,KAAKnB,EAAImB,KAAKpB,EAAIoB,KAAKnB,GAEzBG,QAAQC,IAAI,8BACZ,MACF,QACED,QAAQC,IAAI,qBAGhBe,KAAKjB,cACLC,QAAQC,IAAI,OACZe,KAAKZ,iB,KC3FD9C,EAAgB4B,EAAQ,IAAxB5B,YACF4D,EAAW,IAAIvB,EACfwB,EAAgB7D,EAAY,CAChCC,KAAM,WACNC,aAAc,CACZ4D,UAAW,EACXC,UAAW,EACXvB,OAAQ,EACRK,KAAM,IAERrC,SAAU,CACRwD,aAAc,SAACtD,EAAOC,GACpBD,EAAMoD,UAAYnD,EAAOC,QAAQkD,UACjCF,EAASP,KAAO3C,EAAMoD,WAExBG,aAAc,SAACvD,EAAOC,GACpBD,EAAMqD,UAAYpD,EAAOC,QAAQmD,UACjCH,EAASX,KAAOvC,EAAMqD,WAExBG,UAAW,SAACxD,EAAOC,GACjBD,EAAM8B,OAAS7B,EAAOC,QAAQ4B,QAEhC2B,YAAa,SAACzD,EAAOC,GACnBiD,EAASb,OACTL,QAAQC,IAAIiB,EAASf,MACrBnC,EAAMmC,KAAN,YAAiBe,EAASf,OAE5BX,MAAO,SAACxB,EAAOC,GACbD,EAAMmC,KAAO,O,EAWfgB,EAAcxC,QALhB2C,E,EAAAA,aACAC,E,EAAAA,aACAE,E,EAAAA,YACAD,E,EAAAA,UACAhC,E,EAAAA,MAGWkC,EAAkB,SAAC1D,GAAD,OAAWA,EAAMkD,SAASE,WAC5CO,EAAkB,SAAC3D,GAAD,OAAWA,EAAMkD,SAASG,WAC5CO,EAAa,SAAC5D,GAAD,OAAWA,EAAMkD,SAASf,MAGrCgB,IAAf,Q,GChDiCjC,EAAQ,IAAjC2C,G,GAAAA,MAAOC,G,GAAAA,MAAOC,G,GAAAA,OAYhBC,GAAqB,CACzB,CAAEnC,EAAG,EAAGD,GAAI,GACZ,CAAEC,EAAG,EAAGD,GAAI,GACZ,CAAEC,EAAG,EAAGD,EAAG,GACX,CAAEC,EAAG,EAAGD,EAAG,GACX,CAAEC,EAAG,EAAGD,EAAG,GACX,CAAEC,GAAI,EAAGD,EAAG,GACZ,CAAEC,GAAI,EAAGD,EAAG,GACZ,CAAEC,GAAI,EAAGD,GAAI,IAGTqC,GAAc,SAACC,EAAGC,GACtB,IAAMC,EAAYC,KAAKC,IAAIJ,EAAErC,EAAIsC,EAAEtC,GAC7B0C,EAAYF,KAAKC,IAAIJ,EAAEtC,EAAIuC,EAAEvC,GAC7B4C,EAA2BH,KAAKC,IAAIF,EAAYG,GAItD,OAAkC,GAA3BC,EAA2D,IAFhEH,KAAKI,IAAIL,EAAWG,GAAaC,IAKxBf,GAAc,SAACiB,EAAUC,EAAOC,GAC3C,IAhCiCC,EAAiBC,EAgC5CC,EAAaL,EAAStE,OAExB4E,EAAU,EACVC,EAAW,GACTC,GApC2BL,EAoCKE,EApCYD,EAoCA,CAChDK,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,YAAQC,EACRC,UAAU,EACVC,QAAQ,EACRT,QAAS,EACTpD,EAAG,EACHC,EAAG,GA5CEgC,GAmCmBkB,GAnCAW,KAAI,SAAC9D,GAAD,OAC5BiC,GAAMgB,GAAiBa,KAAI,SAAC7D,GAAD,mBAAC,eACvBiD,GADsB,IAEzBlD,IACAC,aA0CJoD,EAAS9E,KAAK+E,EAAKP,EAAM/C,GAAG+C,EAAM9C,IAElC,IAlBmD,iBAmBjD,IAAM8D,EAAc7B,GAAMmB,GAAU,SAACW,GAAD,OAAOA,EAAET,SAE7C,IAAKQ,EAEH,MAAM,CAAN,EAAOT,GAGT,GAAIS,EAAY/D,IAAMgD,EAAIhD,GAAK+D,EAAY9D,IAAM+C,EAAI/C,EAAG,CAGtD,IAFA,IAAIgE,EAAOF,EAEJE,EAAKP,QACVJ,EAAKW,EAAKjE,GAAGiE,EAAKhE,GAAG4D,QAAS,EAC9BI,EAAOA,EAAKP,OAGd,MAAM,CAAN,EAAOJ,GAGTnB,GAAOkB,GAAU,SAACW,GAAD,OAAOA,EAAEhE,IAAM+D,EAAY/D,GAAKgE,EAAE/D,IAAM8D,EAAY9D,KACrE8D,EAAYH,UAAW,EAEvBxB,GAAmB8B,SAAQ,SAAC9B,GAAwB,IAAD,EAChC,CACfpC,EAAG+D,EAAY/D,EAAIoC,EAAmBpC,EACtCC,EAAG8D,EAAY9D,EAAImC,EAAmBnC,GAFhCD,EADyC,EACzCA,EAAGC,EADsC,EACtCA,EAKX,KACED,EAAI,GACJA,GAAKmD,GACLlD,EAAI,GACJA,GAAKkD,GACJJ,EAAM/C,IAAMA,GAAK+C,EAAM9C,IAAMA,GAC9BqD,EAAKtD,GAAGC,GAAG2D,UACe,YAA1Bd,EAAS9C,GAAGC,GAAGkE,QAPjB,CAYA,IAAMC,EAAgBd,EAAKtD,GAAGC,GAExBuD,EAAQO,EAAYP,MAAQnB,GAAY0B,EAAaK,GACvDC,GAAc,EAEbhB,EAASiB,MAAK,SAACN,GAAD,OAAOA,EAAEhE,IAAMA,GAAKgE,EAAE/D,IAAMA,KAIpCuD,EAAQY,EAAcZ,QAC/Ba,GAAc,IAJdA,GAAc,EACdD,EAAcX,MAAQpB,GAAY+B,EAAepB,GACjDK,EAAS9E,KAAK6F,IAKZC,IACFD,EAAcV,OAASK,EACvBK,EAAcZ,MAAQA,EACtBY,EAAcb,MAAQa,EAAcZ,MAAQY,EAAcX,MAC1DL,GAAoB,EACpBgB,EAAchB,QAAUA,QA1DvBC,EAAS7E,OAAS,GAAG,CAAC,IAAD,wCA+D5B,OAAO8E,GChHIiB,GACL,EADKA,GAED,EAFCA,GAGH,E,oBCFJC,GAAI,CAAEL,OAAQ,SACdM,GAAI,CAAEN,OAAQ,WAEPO,GAAQC,KAAE1C,MDNE,ICMe6B,KAAI,kBAC1Ca,KAAE1C,MDPqB,ICOJ6B,KAAI,kBAAMU,SAGlBI,GAAS,kBACpBD,KAAE1C,MDXqB,ICWJ6B,KAAI,kBACrBa,KAAE1C,MDZmB,ICYF6B,KAAI,WACrB,OAAuB,GAAhBrB,KAAKoC,SAAgB,EAAIJ,GAAID,UAG7BM,GAAY,CACvpoEI9G,GAAgB4B,EAAQ,IAAxB5B,YAsBFsH,GAAgB,SAAC5G,EAAO6G,GAC5B,IAAKA,EAAQ,OAAO7G,EAIpB,OAAQ6G,GACN,IAAK,cACH,OAAOF,GACT,IAAK,WACH,OAAOD,GACT,IAAK,QACH,OAAOJ,GACT,IAAK,SAEL,QACE,OAAOE,OAGPM,GAAmBxH,GAAY,CACnCC,KAAM,cACNC,cAxCqBL,EMNE,GNMKC,EMNL,GNOhB,CACL8F,KAAMyB,GACNI,KAAMZ,GACNxB,MAAO,CAAE/C,EAAG,EAAGC,EAAG,GAClB+C,IAAK,CAAEhD,EAAGzC,EAAQ,EAAG0C,EAAGzC,EAAS,GACjCyH,OAAQ,gBAmCV/G,SAAU,CACRkH,iBAAkB,SAAChH,EAAOC,GAAY,IAAD,EAClBA,EAAOC,QAAhB0B,EAD2B,EAC3BA,EAAGC,EADwB,EACxBA,EAEX7B,EAAMkF,KAAKtD,GAAGC,GAAGkE,OAAS,WAE5BkB,QAAS,SAACjH,EAAOC,GACfD,EAAM+G,KAAO9G,EAAOC,QAAQ6G,MAE9BG,SAAU,SAAClH,EAAOC,GAChBD,EAAM2E,MAAM/C,EAAI3B,EAAOC,QAAQ0B,EAC/B5B,EAAM2E,MAAM9C,EAAI5B,EAAOC,QAAQ2B,EAC/B7B,EAAM+G,KAAOZ,GACbnG,EAAMmC,UAAOoD,GAEf4B,OAAQ,SAACnH,EAAOC,GACdD,EAAM4E,IAAIhD,EAAI3B,EAAOC,QAAQ0B,EAC7B5B,EAAM4E,IAAI/C,EAAI5B,EAAOC,QAAQ2B,EAC7B7B,EAAM+G,KAAOZ,GACbnG,EAAMmC,UAAOoD,GAEf6B,cAAe,SAACpH,EAAOC,GACrBD,EAAMmC,KAAOsB,GAAYzD,EAAMkF,KAAMlF,EAAM2E,MAAO3E,EAAM4E,MAE1DyC,UAAW,SAACrH,EAAOC,GACjBD,EAAMmC,UAAOoD,EACbvF,EAAMkF,KAAO0B,GAAc5G,EAAOA,EAAM6G,SAE1CS,aAAc,SAACtH,EAAOC,GACpBD,EAAMmC,UAAOoD,EACbvF,EAAMkF,KAAO0B,GAAc5G,EAAOC,EAAOC,QAAQ2G,QACjD7G,EAAM6G,OAAS5G,EAAOC,QAAQ2G,W,GAahCC,GAAiBnG,QAPnBqG,G,GAAAA,iBACAC,G,GAAAA,QACAC,G,GAAAA,SACAC,G,GAAAA,OACAC,G,GAAAA,cACAC,G,GAAAA,UACAC,G,GAAAA,aAGWC,GAAa,SAACvH,GAAD,OAAWA,EAAMwH,YAAYtC,MAC1CuC,GAAa,SAACzH,GAAD,OAAWA,EAAMwH,YAAYT,MAC1CW,GAAc,SAAC1H,GAAD,OAAWA,EAAMwH,YAAY7C,OAC3CgD,GAAY,SAAC3H,GAAD,OAAWA,EAAMwH,YAAY5C,KACzCgD,GAAe,SAAC5H,GAAD,OAAWA,EAAMwH,YAAYX,QAC5CjD,GAAa,SAAC5D,GAAD,OAAWA,EAAMwH,YAAYrF,MAExC2E,MAAf,QQ/Fee,4BAAe,CAC5BC,QAAS,CACPpI,MAAOqI,EACP7E,SAAU8E,EACVtG,QAASuG,EACTT,YAAaU,M,wNC8CFC,GAvDb,aAAe,IAAD,gCAKdC,QAAU,SAAC3I,EAAM4I,QACU9C,IAArB,EAAK7F,MAAMD,KAAqB,EAAKC,MAAMD,GAAQ,IACvD,EAAKC,MAAMD,GAAMU,KAAKkI,IAPV,KAUdC,IAAM,SAACC,GAAsB,IAAjBC,EAAgB,wDACtBC,EAAM,GAEV,IADA,EAAKC,MAAMvI,KAAKoI,GAEY,IAAtB,EAAKG,MAAMtI,QADP,CAKR,IAAMuI,EAAS,EAAKD,MAAME,MAG1B,GADAH,EAAItI,KAAKwI,QACkBpD,IAAvB,EAAK7F,MAAMiJ,QACR,CACL,IAAIE,OAAS,EACJA,EAALL,EAAiB,EAAK9I,MAAMiJ,GAAQG,QAAQC,UAC/B,EAAKrJ,MAAMiJ,GAHvB,oBAISE,GAJT,IAIL,2BAAyB,CAAC,IAAjBG,EAAgB,QACvB,EAAKN,MAAMvI,KAAK6I,IALb,gCAST,OAAOP,GA/BK,KAiCdQ,IAAM,SAACV,GACL,EAAKW,MAAM/I,KAAKoI,GAEhB,IADA,IAAIY,EAAM,GAEkB,IAAtB,EAAKD,MAAM9I,QADP,CAKR,IAAMuI,EAAS,EAAKO,MAAME,QAG1B,GAFAD,EAAIhJ,KAAKwI,QAEkBpD,IAAvB,EAAK7F,MAAMiJ,QACR,CACL,IADK,EACCE,EAAY,EAAKnJ,MAAMiJ,GADxB,cAESE,GAFT,IAEL,2BAAyB,CAAC,IAAjBG,EAAgB,QACvB,EAAKE,MAAM/I,KAAK6I,IAHb,gCAOT,OAAOG,GAnDPnG,KAAKtD,MAAQ,GACbsD,KAAK0F,MAAQ,GACb1F,KAAKkG,MAAQ,ICgCFG,GA7BG,SAACC,GAAW,IACpB/J,EAAwC+J,EAAxC/J,KAAMiB,EAAkC8I,EAAlC9I,MAAO+I,EAA2BD,EAA3BC,WAAYC,EAAeF,EAAfE,WAC3BC,EAAWC,cAEbC,EAAc,QAElB,OAHwBC,YAAY9I,KAEZN,IAAOmJ,EAAc,SAE3C,oCACE,yBACE/H,EAAG2H,EACH1H,EAAG2H,EACHK,QAAS,kBAAMJ,EAASlJ,EAAsB,CAAEC,MAAOA,OAEvD,4BACEsJ,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,OAAQN,EACRO,YAAY,IACZC,KAAK,MACLC,YAAY,QAEd,0BAAMC,WAAW,SAASzI,EAAE,KAAKC,EAAE,MAChCtC,MCwDI+K,GAjFG,SAAZA,EAAahB,GAAW,IAyBxBiB,EAvBFC,EAMElB,EANFkB,WACAC,EAKEnB,EALFmB,YAHyB,EAQvBnB,EAJFC,kBAJyB,MAIZ,EAJY,IAQvBD,EAHFE,kBALyB,MAKZ,EALY,EAMzBpK,EAEEkK,EAFFlK,OACAD,EACEmK,EADFnK,MAEIO,EAAQkK,YAAY/I,GACtB6J,GAAqB,EAanBC,EAAcjL,EAAM8K,GAGtBI,EAAY,GAGhB,GAFAL,EAfsB,SAAhBM,EAAiBC,GAErB,GAAsB,qBAAXA,EAAwB,OAAO,EAE1C,IADA,IAAIC,EAAQ,EACZ,MAAgBC,OAAOC,KAAKH,GAA5B,eAAqC,CAAhC,IAAIvC,EAAG,KACVwC,IACAA,GAASF,EAAcnL,EAAMoL,EAAOvC,KAEtC,OAAOwC,EAOHF,CAAcF,GAEO,qBAAhBA,EAA6B,CACtCD,GAAqB,EAErB,cAAgBM,OAAOC,KAAKN,GAA5B,eAA0C,CAArC,IAAIpC,EAAG,KACVqC,EAAUzK,KAAK,CAACoI,EAAKoC,EAAYpC,MAMrC,IAAI2C,EAAoB,IAANX,EAClB,OACE,yBACEhB,WAAYA,EACZC,WAAYA,EACZrK,MAAOA,EACPC,OAAQA,GAER,kBAAC,GAAD,CACEmK,WAA4B,IAAhBkB,EAAoBtL,EAAQ,EAAIoK,EAC5CC,WAAYA,EACZjK,KAAMiL,EACNhK,MAAOiK,IAGRC,EACGE,EAAUlF,KAAI,SAACnG,EAAMiB,GAEnB,OADA0K,GAAoB,GAANX,EACmB,qBAAnB7K,EAAMH,EAAK,IACvB,kBAAC+K,EAAD,CACEf,WAAYA,EAAa2B,EACzB1B,WAAYA,EAAa,IACzBrK,MAAOA,EACPC,OAAQA,EACRmJ,IAAK/H,EACLgK,WAAYjL,EAAK,GACjBkL,YAAalL,EAAK,KAGpB,kBAAC+K,EAAD,CACEf,WAAYA,EAAa2B,EACzB1B,WAAYA,EAAa,IACzBjB,IAAK/H,EACLgK,WAAYjL,EAAK,GACjBkL,YAAalL,EAAK,QAIxB,OCzDN4L,GAAI,IAAIhD,GAgHGiD,OAAMC,MA9GE,WACrB,IAAMC,EAAW1B,YAAYhJ,GACvB2K,EAAkB3B,YAAY9I,GAE9BqI,EAAMS,YAAY7I,GAClB0H,EAAMmB,YAAY5I,GAClByI,EAAWC,cANU,EAOK8B,mBAAS,IAPd,oBAOpBC,EAPoB,KAOVC,EAPU,KASrBC,EAAsB,WACtBL,EAASM,SAASH,KACtBhC,EAAS1J,EAAQ,CAAER,KAAMkM,GAAY,UACI,qBAA9BH,EAASC,IAClBJ,GAAE/C,QAAQkD,EAASC,GAAkBE,GACvCC,EAAY,MAad,OACE,kBAACG,GAAA,EAAD,CAAMC,UAAU,SAASC,WAAS,EAACC,QAAS,GAC1C,kBAACH,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,CAAME,WAAS,GACb,kBAACF,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACG,GAAA,EAAD,CAAYC,QAAQ,MAApB,yBACA,kBAACD,GAAA,EAAD,KACkB,IAAfjD,EAAI/I,OACD+I,EAAIzD,KAAI,SAAC4G,GACP,OAAIA,IAASnD,EAAIA,EAAI/I,OAAS,GAAWkM,EAC7BA,EAAO,QAErB,cAEN,kBAACF,GAAA,EAAD,CAAYC,QAAQ,MAApB,uBACA,kBAACD,GAAA,EAAD,KACkB,IAAf3D,EAAIrI,OACDqI,EAAI/C,KAAI,SAAC4G,GACP,OAAIA,IAAS7D,EAAIA,EAAIrI,OAAS,GAAWkM,EAC7BA,EAAO,QAErB,cAEN,kBAACF,GAAA,EAAD,+CAIN,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,MAAM,YACNC,eAAe,OACfL,QAAQ,WACRM,aAAW,YACX7H,MAAO2G,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAYmB,EAAE/K,OAAOgD,QACtCgI,WAAY,SAACD,GACG,UAAVA,EAAEtE,KAAiBoD,OAG3B,kBAACoB,GAAA,EAAD,CAAQV,QAAQ,WAAWxC,QAAS8B,GAApC,YAGA,kBAACoB,GAAA,EAAD,CAAQV,QAAQ,WAAWxC,QAtDf,WACpB,IAAMpB,EAAM0C,GAAE7C,IAAIgD,EAASC,IAAkB,GAC7C9B,EAAShJ,EAAQ,CAAEb,QAAS6I,OAoDpB,YAGA,kBAACsE,GAAA,EAAD,CAAQV,QAAQ,WAAWxC,QApDf,WACpB,IAAMV,EAAMgC,GAAElC,IAAIqC,EAASC,IAC3B9B,EAAS/I,EAAQ,CAAEb,QAASsJ,OAkDpB,YAGA,kBAAC4D,GAAA,EAAD,CACEV,QAAQ,WACRxC,QAAS,WACPsB,GAAI,IAAIhD,GACRsB,EAASpJ,OAJb,uBAaN,kBAACwL,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,KAAKW,MAAM,UAA/B,cAGqB,IAApB1B,EAASlL,OACR,kBAAC,GAAD,CACEjB,MAAO8N,OAAOC,WAAa,EAAID,OAAOC,WAAa,EACnD9N,OAAQ,IACRoL,WAAYc,EAAS,GACrBb,YAAa,IAEb,Y,kDC5HhB,SAAS0C,GAAS7D,GAAQ,IAChB8D,EAAqC9D,EAArC8D,SAAUtI,EAA2BwE,EAA3BxE,MAAOtE,EAAoB8I,EAApB9I,MAAU6M,EADZ,aACsB/D,EADtB,8BAGvB,OACE,uCACEgE,KAAK,WACLC,OAAQzI,IAAUtE,EAClBgN,GAAE,0BAAqBhN,GACvBiN,kBAAA,qBAA+BjN,IAC3B6M,GAEHvI,IAAUtE,GAAS,wCAAI4M,EAAJ,MAgB1B,IAsCeM,GAtCG,SAACpE,GAAW,IAAD,EACD8B,IAAMI,SAAS,GADd,oBACpB1G,EADoB,KACb6I,EADa,KAOnBC,EAA8CtE,EAA9CsE,YAAaC,EAAiCvE,EAAjCuE,mBAAoBC,EAAaxE,EAAbwE,SACzC,OACE,kBAAC5B,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CAAYC,MAAM,SAClB,kBAAC7B,GAAA,EAAD,KACE,kBAAC8B,GAAA,EAAD,CAAMnJ,MAAOA,EAAO8H,SATL,SAACsB,EAAOC,GAC3BR,EAASQ,IAQuCxB,aAAW,cACpDiB,EAAYlI,KAAI,SAACnG,EAAMiB,GACtB,OAAO,kBAAC4N,GAAA,EAAD,eAAK7F,IAAK/H,EAAOiM,MAAOlN,GApB3C,SAAmBiB,GACjB,MAAO,CACLgN,GAAG,cAAD,OAAgBhN,GAClB,gBAAgB,mBAAhB,OAAoCA,IAiBa6N,CAAU7N,SAGtDqN,EAAmBnI,KAAI,SAAC4I,EAAa9N,GACpC,OACE,kBAAC2M,GAAD,CAAUrI,MAAOA,EAAOyD,IAAK/H,EAAOA,MAAOA,GACzC,kBAAC,KAAD,CACEsN,SAAUA,EACVS,MAAOC,KACPC,UAAW,CACTF,MAAO,CAAEG,UAAW,YAAaC,WAAY,aAE/CC,WAAW,GAEVN,UC7DJO,GACP,6kBADOA,GAyBP,ueAzBOA,GA+CA,g6CA/CAA,GAyGD,q8KAzGCA,GAuRS,4pBAvRTA,GAmTK,0/DAnTLA,GAmXQ,0vDAnXRA,GAicmB,oOAjcnBA,GA4csB,qnBA5ctBA,GAmeoB,+xEAnepBA,GAwjBH,6xFAxjBGA,GA8pBE,wJA9pBFA,GAoqBC,ozCCjlBCC,GAlEF,WACX,IACMjB,EAAqB,CAACgB,GAAcA,GAAcA,IAExD,OACE,kBAAChD,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,EAACD,UAAU,SAASE,QAAS,GAC/C,kBAACH,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CAAYC,MAAM,gBAClB,kBAAC7B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,SAApB,mFAIA,kBAACD,GAAA,EAAD,CAAYC,QAAQ,SAApB,8DAGA,kBAACD,GAAA,EAAD,CAAYC,QAAQ,SAApB,6FAIA,kBAACD,GAAA,EAAD,CAAYC,QAAQ,SAApB,wCAGA,kBAACD,GAAA,EAAD,CAAYC,QAAQ,SAApB,qGAON,kBAACR,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,GAClB,kBAAC,GAAD,OAEF,kBAACF,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,IACb,kBAAC,GAAD,CACEnB,YAnCY,CAAC,MAAO,MAAO,eAoC3BC,mBAAoBA,EACpBC,SAAS,gBAGb,kBAACjC,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CAAYC,MAAM,gBAClB,kBAAC7B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAjDF,oZAqDJ,kBAACP,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CAAYC,MAAM,gBAClB,kBAAC7B,GAAA,EAAD,KACE,kBAAC6C,GAAA,EAAD,CACEC,MAAM,YACN5C,QAAQ,QACR6C,KAAK,0CAEJ,oB,iDCwGAC,GA9KWC,sBAAW,SAAC9F,EAAO+F,GAAS,IAC5C7B,EAAgDlE,EAAhDkE,GAD2C,EACKlE,EAA5CgG,gBADuC,MAC5B,EAD4B,IACKhG,EAA9BlK,cADyB,MAChB,IADgB,IACKkK,EAAhBnK,aADW,MACH,IADG,IAGbqM,mBAAS,GAHI,oBAG5C+D,EAH4C,KAG/BC,EAH+B,OAIHhE,mBAAS8D,GAJN,oBAI5CG,EAJ4C,KAI1BC,EAJ0B,OAKvBlE,mBAAS,GALc,oBAK5CmE,EAL4C,KAKpCC,EALoC,OAMXpE,oBAAS,GANE,oBAM5CqE,EAN4C,KAM9BC,EAN8B,OAOftE,mBAAS,GAPM,oBAO5CuE,EAP4C,KAOhCC,EAPgC,OAQPxE,mBAAS,GARF,oBAQ5CyE,EAR4C,KAQ5BC,EAR4B,KA2HnD,OAlHAC,8BAAoBd,GAAK,iBAAO,CAC9BlF,KAD8B,SACzBvI,GACHI,QAAQC,IAAI,QACZuN,EAAe5N,IAEjBwO,KAL8B,SAKzBxO,GACHI,QAAQC,IAAI,SACZyN,EAAoB9N,IAEtByO,aAT8B,SASjBzO,GACXgO,EAAUhO,GACVkO,GAAiBD,IAEnBS,MAb8B,WAc5BR,GAAiBD,GACjBD,EAAU,GACVF,EAAoBO,QAIxBM,qBAAU,WACR,GAAe,IAAXZ,EAAc,CAChB3N,QAAQC,IAAI,cAAgBuL,GAC5BxL,QAAQC,IAAI8N,EAAYR,GACxB,IAAMiB,EAAOT,EAAaR,EAE1BS,EAAcQ,GACd,IAAMC,GAAcR,EAAiBV,GAAeD,EAC9CoB,EAAgBT,EAAiBX,EACvCY,EAAkBM,GAElBG,KAASC,OACP,cAAgBpD,EAChB,GACA,CACEqD,KAAM,CACJjP,GAAI,MAGR,CACEiP,KAAM,CACJjP,EAAG,GAELkP,QAAS,EACTC,KAAMC,KAAOC,WAKjBN,KAASC,OACP,cAAgBpD,EAChB,EACA,CACEqD,KAAM,CACJhP,EAAG,IAAM,IAAM6O,EACftR,OAAQ,IAAMsR,IAGlB,CACEG,KAAM,CACJhP,EAAG,IAAM,IAAM4O,EACfrR,OAAQ,IAAMqR,GAEhBM,KAAMC,KAAOC,gBAGZ,GAAe,IAAXtB,EAAc,CACvB3N,QAAQC,IAAI,cAAgBuL,GAC5BxL,QAAQC,IAAI8N,EAAYN,GACxB,IAAMW,EAAOL,EAAaN,EAC1BO,EAAcI,GAEd,IAAMM,EAAgBT,EAAiBX,EACjC4B,GAAmBjB,EAAiBR,GAAoBH,EAC9DY,EAAkBE,GAElBO,KAASC,OACP,cAAgBpD,EAChB,GACA,CACEqD,KAAM,CACJjP,GAAI,MAGR,CACEiP,KAAM,CACJjP,EAAG,GAELkP,QAAS,EACTC,KAAMC,KAAOC,WAKjBN,KAASC,OACP,cAAgBpD,EAChB,EACA,CACEqD,KAAM,CACJhP,EAAG,IAAM,IAAM6O,EACftR,OAAQ,IAAMsR,IAGlB,CACEG,KAAM,CACJhP,EAAG,IAAM,IAAMqP,EACf9R,OAAQ,IAAM8R,GAEhBH,KAAMC,KAAOC,cAIlB,CAACpB,IAGF,oCACE,yBACErC,GAAG,UACHpO,OAAQA,EACRD,MAAOA,EACPgS,YAAU,UACVC,MAAM,6BACNC,QAAQ,eAER,8BACE,6BACE7D,GAAG,QACHrO,MAAM,MACNC,OAAO,MACPkS,oBAAoB,qBAEpB,0BACEnH,KAAK,UACLlH,EAAE,4FAIN,uBAAGuK,GAAG,QACJ,4BAAQ1D,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAG9B,0BAAMwD,GAAG,aACP,yBAAK5L,EAAE,IAAIC,EAAE,IAAIqN,KAAK,QAAQqC,QAAQ,IAAIpH,KAAK,cAInD,yBAAKvI,EAAE,IAAIC,EAAE,IAAIqN,KAAK,QAAQ/E,KAAK,SAEnC,0BACEqH,UAAW,aAAehE,EAC1BiE,KAAK,kBACLtH,KAAK,cACLvI,EAAE,MACFC,EAAE,IACF1C,MAAM,OACNC,OAAO,SAET,0BAAMwC,EAAE,MAAMC,EAAE,MAAMsI,KAAK,QAAQuH,SAAS,OAA5C,UACM3B,EADN,aACqBT,EADrB,WCuKOH,GA5TW,WACxB,IAAMxM,EAAOiH,YAAYlG,GACnBnB,EAAOqH,YAAYjG,GACnBxB,EAAOyH,YAAYhG,GACnB+N,EAAOC,iBAAO,MACdC,EAAOD,iBAAO,MALU,EAOIpG,mBAAS,GAPb,oBAOvBpI,EAPuB,KAOZ0O,EAPY,OAQItG,mBAAS,GARb,oBAQvBnI,EARuB,KAQZ0O,EARY,OAUNvG,mBAAS,GAVH,oBAUvBwG,EAVuB,KAUjBC,EAViB,OAWNzG,mBAAS,GAXH,oBAWvB0G,EAXuB,KAWjBC,EAXiB,OAYE3G,mBAAS,GAZX,oBAYvB4G,EAZuB,KAYbC,EAZa,OAaE7G,mBAAS,GAbX,oBAavB8G,EAbuB,KAabC,EAba,OAeF/G,mBAAS,GAfP,oBAevB1J,EAfuB,KAef0Q,EAfe,OAiBNhH,oBAAS,GAjBH,oBAkBxB/B,GAlBwB,UAkBbC,eAEjB,SAAS+I,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAEtD,IAAMI,EAAQ,yCAAG,yCAAA5O,EAAA,sDACX6O,EAAQ,EACRC,EAAQ,EAFG,cAGD7Q,GAHC,gEAGN6G,EAHM,QAIbhH,QAAQC,IAAI+G,GACNpH,EAAIoH,EAAE,GACNnH,EAAImH,EAAE,GACZiJ,EAAQrQ,GACRuQ,EAAQtQ,GACRwQ,EAAYU,GACZR,EAAYS,GACZhR,QAAQC,IAAIL,EAAGC,GACfG,QAAQC,IAAI8Q,EAAOC,GACfpR,EAAImR,GACNpB,EAAKsB,QAAQ9I,KAAKvI,EAAImR,GACtBpB,EAAKsB,QAAQ5C,aAAa,IACjBzO,EAAImR,IACbpB,EAAKsB,QAAQ7C,KAAK2C,EAAQnR,GAC1B+P,EAAKsB,QAAQ5C,aAAa,IAGxBxO,EAAImR,GACNnB,EAAKoB,QAAQ9I,KAAKtI,EAAImR,GACtBnB,EAAKoB,QAAQ5C,aAAa,IACjBxO,EAAImR,IACbnB,EAAKoB,QAAQ7C,KAAK4C,EAAQnR,GAC1BgQ,EAAKoB,QAAQ5C,aAAa,IAG5B0C,EAAQnR,EACRoR,EAAQnR,EA9BK,UA+BP4Q,EAAM,KA/BC,uMAAH,qDAkCdlC,qBAAU,WACR,GAAqB,OAAjBoB,EAAKsB,SAAqC,OAAjBpB,EAAKoB,QAChC,GAAoB,IAAhB9Q,EAAK/B,OACP4B,QAAQC,IAAI,SACZ0P,EAAKsB,QAAQ3C,QACbuB,EAAKoB,QAAQ3C,aAEb,IACEwC,IACA,MAAOjG,GACP7K,QAAQC,IAAI4K,MAIjB,CAAC1K,IAEJ,IAAM+Q,EAAe,SAACC,EAAmBC,GACvC3J,EAAS0J,EAAkBC,KAE7B,OACE,kBAAClH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,CACEE,WAAS,EACTsH,GAAI,GACJrH,QAAS,EACTsH,QAAQ,SACRC,WAAW,UAEX,kBAAC1H,GAAA,EAAD,CACEI,MAAI,EACJF,WAAS,EACTgD,GAAI,GACJ/C,QAAS,EACTF,UAAU,MACVwH,QAAQ,SACRC,WAAW,UAEX,kBAACrH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,CACEI,MAAI,EACJF,WAAS,EACTgD,GAAI,GACJ/C,QAAS,EACTF,UAAU,MACVwH,QAAQ,SACRC,WAAW,UAEX,kBAAC1H,GAAA,EAAD,CAAMkD,GAAI,GAAIyE,GAAI,EAAGvH,MAAI,EAACF,WAAS,EAACD,UAAU,UAC5C,kBAACD,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACwH,GAAD,CACEjG,GAAI,EACJpO,OAAO,MACPD,MAAM,MACNkQ,IAAKsC,EACLrC,SAAU3M,KAGd,kBAACkJ,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEV,QAAQ,WACRxC,QAAS,WACP8H,EAAKsB,QAAQ9I,KAAK,GAClBwH,EAAKsB,QAAQ5C,aAAa,KAJ9B,YAUF,kBAACxE,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEV,QAAQ,WACRxC,QAAS,WACP8H,EAAKsB,QAAQ7C,KAAK,GAClBuB,EAAKsB,QAAQ5C,aAAa,KAJ9B,aAWJ,kBAACxE,GAAA,EAAD,CAAMkD,GAAI,GAAIyE,GAAI,EAAGvH,MAAI,EAACF,WAAS,EAACD,UAAU,UAC5C,kBAACD,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACwH,GAAD,CACEjG,GAAI,EACJpO,OAAO,MACPD,MAAM,MACNkQ,IAAKwC,EACLvC,SAAU/M,KAGd,kBAACsJ,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEV,QAAQ,WACRxC,QAAS,WACPgI,EAAKoB,QAAQ9I,KAAK,GAClB0H,EAAKoB,QAAQ5C,aAAa,KAJ9B,YAUF,kBAACxE,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEV,QAAQ,WACRxC,QAAS,WACPgI,EAAKoB,QAAQ7C,KAAK,GAClByB,EAAKoB,QAAQ5C,aAAa,KAJ9B,iBAgBZ,kBAACxE,GAAA,EAAD,CACEI,MAAI,EACJ8C,GAAI,GACJhD,WAAS,EACTC,QAAS,EACTF,UAAU,MACVwH,QAAQ,SACRC,WAAW,UAEX,kBAAC1H,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACO,GAAA,EAAD,CACEC,MAAM,qBACNC,eAAe,UACfL,QAAQ,WACRM,aAAW,qBACX7H,MAAO1B,EACPsQ,KAAK,SACL9G,SAAU,SAACC,GAAD,OAAOiF,EAAajF,EAAE/K,OAAOgD,QACvCgI,WAAY,SAACD,GACG,UAAVA,EAAEtE,KACJ2K,EAAa5P,EAAc,CACzBF,UAAWuQ,SAASvQ,SAK9B,kBAACyI,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACO,GAAA,EAAD,CACEC,MAAM,qBACNC,eAAe,UACfL,QAAQ,WACRM,aAAW,qBACX7H,MAAOzB,EACPqQ,KAAK,SACL9G,SAAU,SAACC,GAAD,OAAOkF,EAAalF,EAAE/K,OAAOgD,QACvCgI,WAAY,SAACD,GACG,UAAVA,EAAEtE,KACJ2K,EAAa3P,EAAc,CACzBF,UAAWsQ,SAAStQ,SAK9B,kBAACwI,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACO,GAAA,EAAD,CACEC,MAAM,SACNC,eAAe,UACfL,QAAQ,WACRM,aAAW,SACX7H,MAAOhD,EACP4R,KAAK,SACL9G,SAAU,SAACC,GAAD,OAAO2F,EAAU3F,EAAE/K,OAAOgD,QACpCgI,WAAY,SAACD,GACG,UAAVA,EAAEtE,KACJ2K,EAAa1P,EAAW,CAAE1B,OAAQ6R,SAAS7R,UAKrD,kBAAC+J,GAAA,EAAD,CACEI,MAAI,EACJF,WAAS,EACTC,QAAS,EACT+C,GAAI,GACJjD,UAAU,MACVwH,QAAQ,SACRC,WAAW,UAEX,kBAAC1H,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEV,QAAQ,YACR4C,MAAM,YACNpF,QAAS,WACPJ,EAASjI,KACTiI,EAAShG,OALb,iBAWF,kBAACoI,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEkC,MAAM,UACN5C,QAAQ,YACRxC,QAAS,WACPJ,EAASjI,OAJb,WAYJ,kBAACqK,GAAA,EAAD,CACEI,MAAI,EACJF,WAAS,EACTgD,GAAI,GACJjD,UAAU,MACVwH,QAAQ,SACRC,WAAW,UAEVpR,EAAK/B,OAAS,EACb,oCACE,kBAACyL,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GACb,kBAAC3C,GAAA,EAAD,CAAYY,MAAM,UAAlB,oBACA,kBAACZ,GAAA,EAAD,CAAYY,MAAM,UAAlB,mBAAwCoF,EAAxC,eAAuDJ,IACvD,kBAAC5F,GAAA,EAAD,CAAYY,MAAM,UAAlB,mBAAwCsF,EAAxC,eAAuDJ,MAGzD,KAEJ,kBAACrG,GAAA,EAAD,CACEI,MAAI,EACJF,WAAS,EACTC,QAAS,EACT+C,GAAI,EACJjD,UAAU,SACVwH,QAAQ,SACRC,WAAW,UAEX,kBAAC1H,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACG,GAAA,EAAD,wBAEDjK,EAAK/B,OAAS,EACX+B,EAAKuD,KAAI,SAACZ,EAAOtE,GACf,OACE,kBAACqL,GAAA,EAAD,CAAMI,MAAI,EAAC1D,IAAK/H,GACd,kBAAC4L,GAAA,EAAD,qBAAsBtH,EAAM,GAA5B,mBAAyCA,EAAM,GAA/C,UAIN,WC1SH8O,GAzBF,WACX,IACM/F,EAAqB,CACzBgB,GACAA,GACAA,GACAA,IAGF,OACE,kBAAChD,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,EAACD,UAAU,SAASE,QAAS,GAC/C,kBAACH,GAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,GAAD,OAGF,kBAACJ,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GAAIyE,GAAI,IACrB,kBAAC,GAAD,CACE5F,YAhBY,CAAC,kBAAmB,QAAS,WAAY,SAiBrDC,mBAAoBA,EACpBC,SAAS,kB,mICNnB,SAAS+F,GAAavK,GAAQ,IACpBwK,EAAsBxK,EAAtBwK,KAAMC,EAAgBzK,EAAhByK,QAASC,EAAO1K,EAAP0K,GAEjBC,EAAa7I,IAAM8I,SACvB,kBACE9I,IAAMgE,YAAW,SAAC+E,EAAW9E,GAAZ,OACf,kBAAC,KAAD,eAAY2E,GAAIA,EAAI3E,IAAKA,GAAS8E,SAEtC,CAACH,IAGH,OACE,4BACE,kBAACI,GAAA,EAAD,CAAUC,QAAM,EAACC,UAAWL,GACzBH,EAAO,kBAACS,GAAA,EAAD,KAAeT,GAAuB,KAC9C,kBAACU,GAAA,EAAD,CAAcT,QAASA,MAY/B,IAAMU,GAAYC,aAAW,CAC3BC,KAAM,CACJC,KAAM,KAuDKC,iBAnDI,WACjB,IAAMC,EAAUL,KAEhB,OACE,yBAAKjD,UAAWsD,EAAQH,MACtB,kBAACI,GAAA,EAAD,CAAOC,UAAW,GAChB,kBAACC,GAAA,EAAD,CAAMtI,aAAW,6BACf,kBAACyH,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,CAAcT,QAAQ,eAExB,kBAACmB,GAAA,EAAD,MACA,kBAACrB,GAAD,CACEG,GAAG,eACHD,QAAQ,QACRD,KAAM,kBAACqB,GAAA,EAAD,QAER,kBAACtB,GAAD,CACEG,GAAG,eACHD,QAAQ,QACRD,KAAM,kBAACsB,GAAA,EAAD,QAER,kBAACvB,GAAD,CACEG,GAAG,eACHD,QAAQ,QACRD,KAAM,kBAACuB,GAAA,EAAD,QAER,kBAACxB,GAAD,CACEG,GAAG,eACHD,QAAQ,QACRD,KAAM,kBAACwB,GAAA,EAAD,SAIV,kBAACJ,GAAA,EAAD,MACA,kBAACD,GAAA,EAAD,CAAMtI,aAAW,wBACf,kBAACkH,GAAD,CACEG,GAAG,eACHD,QAAQ,UACRD,KAAM,kBAAC,KAAD,QAER,kBAACD,GAAD,CACEG,GAAG,eACHD,QAAQ,QACRD,KAAM,kBAACyB,GAAA,EAAD,c,UC7ElB,SAASC,KACP,OAAOnR,KAAKoR,MAAsB,GAAhBpR,KAAKoC,UAAiB,GAE1C,SAASiP,KACP,IAAMC,EAAM,GAAKH,KACXI,EAAO,GAAKJ,KAElB,MAAO,CACLG,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAGb,IAAMnB,GAAYC,cAAW,SAACoB,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACV7W,MAAO,IACP8W,gBAAiBH,EAAMI,QAAQC,WAAWJ,MAC1CK,OAAQ,iBACRC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAST,EAAM9J,QAAQ,EAAG,EAAG,QAsHlBwK,GAnHO,WAAO,IAAD,EACAhL,oBAAS,GADT,oBACnBiL,EADmB,KACXC,EADW,KAEpB5B,EAAUL,KAFU,EAILrJ,IAAMI,SAASkK,IAA7BiB,EAJmB,qBAMpB9P,EAAS+C,YAAYhC,IACrB6B,EAAWC,cAEjB,OACE,oCACE,kBAACqD,GAAA,EAAD,CACE6J,UAAW,kBAACrB,GAAA,EAAD,MACX1L,QAAS,kBAAM6M,GAAQ,IACvBnI,MAAO,CAAEsI,QAAS,GAClBxK,QAAQ,YACR4C,MAAM,aALR,QASA,kBAAC6H,GAAA,EAAD,CACEC,KAAMN,EACNO,QAAS,kBAAMN,GAAQ,IACvBjJ,kBAAgB,iCAEhB,kBAACwJ,GAAA,EAAD,CAAW1I,MAAOoI,EAAYnF,UAAWsD,EAAQiB,OAC/C,kBAAClK,GAAA,EAAD,CAAME,WAAS,EAACC,QAAS,EAAGsH,QAAQ,SAASC,WAAW,UACtD,kBAAC1H,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACG,GAAA,EAAD,CAAYC,QAAQ,MAApB,uBAEF,kBAACR,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACgJ,GAAA,EAAD,KACE,kBAACb,GAAA,EAAD,KACE,kBAAChI,GAAA,EAAD,yCAEF,kBAACgI,GAAA,EAAD,KACE,kBAAChI,GAAA,EAAD,mEAIF,kBAACgI,GAAA,EAAD,KACE,kBAAChI,GAAA,EAAD,yEAON,kBAACP,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACG,GAAA,EAAD,CAAYC,QAAQ,MAApB,mBAEF,kBAACR,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,EAACC,QAAS,GAC3B,CACC,CAAEnF,OAAQ,cAAeqQ,KAAM,eAC/B,CAAErQ,OAAQ,YAAaqQ,KAAM,aAC7B,CAAErQ,OAAQ,SAAUqQ,KAAM,UAC1B,CAAErQ,OAAQ,QAASqQ,KAAM,iBACzBxR,KAAI,SAACuG,GAAD,OACJ,kBAACJ,GAAA,EAAD,CAAMI,MAAI,EAAC1D,IAAK0D,EAAKpF,QACnB,kBAACkG,GAAA,EAAD,CACEV,QAAQ,YACR8K,SAAUtQ,IAAWoF,EAAKpF,OAC1BgD,QAAS,kBACPJ,EAASnC,GAAa,CAAET,OAAQoF,EAAKpF,WAEvC0H,MAAO,CAAEsI,QAAS,IAEjB5K,EAAKiL,WAKd,kBAACrL,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACG,GAAA,EAAD,CAAYC,QAAQ,MAApB,8BAEF,kBAACR,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACgJ,GAAA,EAAD,KACE,kBAACb,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACrF,GAAA,EAAD,CACEC,MAAM,YACN5C,QAAQ,QACR6C,KAAK,+CAHP,oCAQF,kBAACkF,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACrF,GAAA,EAAD,CACEC,MAAM,YACN5C,QAAQ,QACR6C,KAAK,iFAHP,0EASF,kBAACkF,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACrF,GAAA,EAAD,CACEC,MAAM,YACN5C,QAAQ,QACR6C,KAAK,mEAHP,mH,8BCrCHkI,GAnFE,WACf,IAAMrQ,EAAO6C,YAAYnC,IACnBgC,EAAWC,cAEjB,OACE,kBAACmC,GAAA,EAAD,CAAME,WAAS,EAACC,QAAS,GACvB,kBAACH,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEV,QAAQ,YACR4C,MAAM,UACN2H,UAAW,kBAACS,GAAA,EAAD,MACXF,SAAUpQ,IAASZ,GACnB0D,QAAS,kBACPJ,EACExC,GAAQ,CACNF,KAAMA,IAASZ,GAAgBA,GAAYA,OAIjDoI,MAAO,CAAEsI,QAAS,IAZpB,cAiBF,kBAAChL,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEkC,MAAM,UACN5C,QAAQ,YACRuK,UAAW,kBAACS,GAAA,EAAD,MACXF,SAAUpQ,IAASZ,GACnB0D,QAAS,kBACPJ,EACExC,GAAQ,CAAEF,KAAMA,IAASZ,GAAcA,GAAYA,OAGvDoI,MAAO,CAAEsI,QAAS,IAVpB,YAgBF,kBAAChL,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEkC,MAAM,UACN5C,QAAQ,YACRuK,UAAW,kBAACS,GAAA,EAAD,MACXF,SAAUpQ,IAASZ,GACnB0D,QAAS,kBAAMJ,EAASxC,GAAQ,CAAEF,KAAMZ,OACxCoI,MAAO,CAAEsI,QAAS,IANpB,SAWF,kBAAChL,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEkC,MAAM,UACN5C,QAAQ,YACRuK,UAAW,kBAACU,GAAA,EAAD,MACXzN,QAAS,kBAAMJ,EAASrC,OACxBmH,MAAO,CAAEsI,QAAS,IALpB,UAUF,kBAAChL,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACc,GAAA,EAAD,CACEkC,MAAM,UACN5C,QAAQ,YACRuK,UAAW,kBAACW,GAAA,EAAD,MACX1N,QAAS,kBAAMJ,EAASpC,OACxBkH,MAAO,CAAEsI,QAAS,IALpB,UAWF,kBAAChL,GAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,GAAD,S,aCvFJ/K,EAAQ,IAPVsW,G,GAAAA,MACAC,G,GAAAA,UACAC,G,GAAAA,SACAC,G,GAAAA,UACAvL,G,GAAAA,WACAwL,G,GAAAA,eACA7C,G,GAAAA,MAkEa8C,GAtDQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxB,OACE,oCACE,kBAACF,GAAD,CAAgBtD,UAAWS,IACzB,kBAACyC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,KAjBC,SAACG,GAChB,OAAIA,EAAKrS,OACA,eACEqS,EAAKtS,SACP,kCAEA,gCAWkBuS,CAASD,MAI1B,kBAACJ,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,6BAEF,kBAACA,GAAD,KACE,kBAAC,GAAD,KAAaG,EAAK1S,SAItB,kBAACsS,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,2BAEF,kBAACA,GAAD,KACE,kBAAC,GAAD,KAAaG,EAAKzS,SAItB,kBAACqS,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,wBAEF,kBAACA,GAAD,KACE,kBAAC,GAAD,KAAaG,EAAK3S,SAItB,kBAACuS,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,wBAEF,kBAACA,GAAD,KACE,kBAAC,GAAD,KAAaG,EAAK9S,gB,yCCjBnBoG,OAAMC,MAvCJ,SAAC/B,GAAW,IAAD,QAClBwO,EAA4DxO,EAA5DwO,KAAME,EAAsD1O,EAAtD0O,SAAUC,EAA4C3O,EAA5C2O,SAAUtT,EAAkC2E,EAAlC3E,MAAOC,EAA2B0E,EAA3B1E,IAAKzC,EAAsBmH,EAAtBnH,KAAM+V,EAAgB5O,EAAhB4O,YAC9C1S,EAAWrD,IAAI,UAAIA,EAAK6V,GAAUC,UAAnB,aAAI,EAA0BzS,UAC7CC,EAAStD,IAAI,UAAIA,EAAK6V,GAAUC,UAAnB,aAAI,EAA0BxS,QAC3C0S,EAAYhW,GAA4C,KAApC,UAAAA,EAAK6V,GAAUC,UAAf,eAA0B9S,OAC9CiT,EAAkBjW,EAAI,UAAGA,EAAK6V,GAAUC,UAAlB,aAAG,EAA0BjT,QAAU,EAEnE,OACE,oCACE,wBACEwM,UAAW6G,KACTC,KAAOC,SACPD,KAAOR,EAAK/R,QAFD,eAGRuS,KAAO3T,MAAQqT,IAAarT,EAAM/C,GAAKqW,IAAatT,EAAM9C,GAHlD,eAIRyW,KAAO1T,IAAMoT,IAAapT,EAAIhD,GAAKqW,IAAarT,EAAI/C,GAJ5C,eAKRyW,KAAOE,OAAShT,GALR,eAMR8S,KAAOG,QAAUN,GANT,eAORG,KAAOnW,KAAOsD,IAEnB8C,IAAG,UAAKyP,EAAL,YAAiBC,GACpBpO,QAASqO,EAAYF,EAAUC,GAC/B1J,MAAO,CACLmK,eAAgBN,EAAe,UACN,GAAlBA,EADwB,WAE3B7S,IAGLpD,IAASqD,GAAY2S,GAAa1S,GACjC,kBAACkT,GAAA,EAAD,CAAS3K,MAAO,kBAAC,GAAD,CAAgB8J,KAAM3V,EAAK6V,GAAUC,MACnD,yBACEzG,UAAW8G,KAAOM,YAClBrK,MAAO,CAAEU,MAAO,kBAGlB,UCoCG4J,GA/DI,SAACvP,GAClB,IAAMpE,EAAO0E,YAAYrC,IACnB3C,EAAMgF,YAAYjC,IAClBxF,EAAOyH,YAAYhG,IACnBe,EAAQiF,YAAYlC,IACpBX,EAAO6C,YAAYnC,IAEnBgC,EAAWC,cAPW,EASM8B,oBAAS,GATf,oBASrBsN,EATqB,KASVC,EATU,KAUtBC,EAAc,kBAAMD,GAAa,IACjCE,EAAY,kBAAMF,GAAa,IAErCxI,qBAAU,WAIR,OAHA2I,SAASC,iBAAiB,YAAaH,GACvCE,SAASC,iBAAiB,UAAWF,GAE9B,WACLC,SAASE,oBAAoB,YAAaJ,GAC1CE,SAASE,oBAAoB,UAAWH,MAEzC,IAEH,IAAMf,EAAc,SAACF,EAAUC,GAAX,OAAwB,WAC1CjW,QAAQC,IAAI+V,EAAUC,GAClBlR,IAASZ,GACXsD,EAASzC,GAAiB,CAAEpF,EAAGoW,EAAUnW,EAAGoW,KACnClR,IAASZ,GAClBsD,EAASvC,GAAS,CAAEtF,EAAGoW,EAAUnW,EAAGoW,KAC3BlR,IAASZ,IAClBsD,EAAStC,GAAO,CAAEvF,EAAGoW,EAAUnW,EAAGoW,OAItC,OACE,yBAAKzG,UAAW8G,KAAOe,UACrB,2BAAO7H,UAAW8G,KAAOgB,WACvB,+BACGpU,EAAKQ,KAAI,SAAC6T,EAAKvB,GAAN,OACR,wBAAIzP,IAAKyP,EAAUzJ,MAAO,CAAE6H,OAAQ,oBACjCmD,EAAI7T,KAAI,SAACoS,EAAMG,GAAP,OACP,kBAAC,GACK,CACF1P,IAAI,GAAD,OAAKyP,EAAL,cAAmBC,GACtBH,OACAE,WACAC,WACAtT,QACAC,MACAzC,OACA2W,YACAZ,YAAaA,eC5ClBsB,GAjBc,WAC3B,OACE,kBAACtN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,CAAME,WAAS,EAACC,QAAS,EAAGsH,QAAQ,SAASC,WAAW,UACtD,kBAAC1H,GAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,GAAD,OAEF,kBAACJ,GAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,GAAD,WCeG2H,GAvBF,WACX,IACM/F,EAAqB,CACzBgB,GACAA,GACAA,IAGF,OACE,kBAAChD,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,EAACD,UAAU,SAASE,QAAS,GAC/C,kBAACH,GAAA,EAAD,CAAMI,MAAI,GACR,kBAACwN,GAAD,OAEF,kBAAC5N,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GAAIyE,GAAI,IACrB,kBAAC,GAAD,CACE5F,YAdY,CAAC,kBAAmB,OAAQ,oBAexCC,mBAAoBA,EACpBC,SAAS,kB,mDCLblI,GAAI,ICfR,aAA6B,IAAD,OAAhBrG,EAAgB,uDAAT,QAAS,yBAK5Bma,mBAAqB,SAACC,EAAWvY,GAC/B,IAAID,EADsC,gBAGzBwY,GAHyB,IAG1C,2BAAKxY,EAAuB,QAC1B,EAAKwY,UAAUxY,GAAYC,EAJa,gCALhB,KAc5BwY,aAAe,SAACC,GACd,OAAOC,KAAQC,cAAcC,gBAAgBH,IAfnB,KAkB5BI,IAAM,SAAC9Y,GACLA,EAAWA,EAAS+Y,cAAcC,OAOlC,IANA,IAKIC,EALEC,EAAmB,EAAKT,aAAazY,GACvCX,EAAQ,EACR8Z,EAAQ,GAIZ,MAAatP,OAAOC,KAAK,EAAK0O,WAA9B,eAA0C,CACxCS,GADGA,EAAqC,MAC5BF,cAAcC,OAE1B,IAAMI,EAAe,EAAKX,aAAaQ,GAEvCE,EAAMna,KAAK,GACX,IANwC,EAMpC4K,EAAQ,EAERyP,OAAI,EARgC,cAS3BD,GAT2B,IASxC,2BAAKC,EAAsB,QACzBzP,GAAS,EACLsP,EAAiBzO,SAAS4O,KAC5BF,EAAM9Z,IAAU,GAZoB,8BAexC8Z,EAAM9Z,GAAS8Z,EAAM9Z,GAAS6D,KAAKI,IAAIsG,EAAO,GAC9CvK,GAAS,EAWXwB,QAAQC,IAAIqY,GACZ,IAAM7V,EAAMJ,KAAKI,IAAL,MAAAJ,KAAYiW,GAExB,GADAtY,QAAQC,IAAIwC,GACRA,GAAO,GAAK,CAEd,IAAMgW,EAAoBzP,OAAOC,KAAK,EAAK0O,WAAWW,EAAMI,QAAQjW,IACpE,OAAO,EAAKkV,UAAUc,GAGxB,MAAO,sCA9DmB,KAiE5BE,cAAgB,WAGd,IAFA,IAAIxZ,EACAyZ,EAAe,GACnB,MAAiB5P,OAAOC,KAAK,EAAK0O,WAAlC,eAAKxY,EAAyC,KAE5CyZ,EAAaza,KAAKgB,GAGpB,OAAOyZ,GAzEmB,KA4E5BC,aAAe,WAKb,IAFA,EAAKF,kBAEK,CAGR,GACE,CACE,OACA,OACA,QACA,OACA,MACA,IACA,aACA,cACA/O,SAXa,MAaf,QA/FJ5I,KAAKzD,KAAOA,EACZyD,KAAK2W,UAAY,IDgBnB/T,GAAE8T,mBACA,CAAC,QAAS,KAAM,OAChB,kDAGF9T,GAAE8T,mBACA,CAAC,yBACD,gKAGF9T,GAAE8T,mBACA,CAAC,4DACD,kEAEF9T,GAAE8T,mBACA,CAAC,wCACD,iFAEF9T,GAAE8T,mBAAmB,CAAC,iBAAkB,IAExC9T,GAAE8T,mBACA,CAAC,mEACD,qNAEF9T,GAAE8T,mBACA,CACE,gFAEF,uQAEF9T,GAAE8T,mBACA,CAAC,uCACD,oFAEF9T,GAAE8T,mBACA,CAAC,uCACD,yDAEF9T,GAAE8T,mBACA,CAAC,iCACD,8EAEF9T,GAAE8T,mBACA,CAAC,yCACD,qYAEF9T,GAAE8T,mBACA,CAAC,8DACD,sJAEF9T,GAAE8T,mBACA,CAAC,kCACD,sJAEF9T,GAAE8T,mBACA,CAAC,wCACD,iLAEF9T,GAAE8T,mBACA,CAAC,8BACD,iIAEF9T,GAAE8T,mBACA,CAAC,mCACD,qCAEF9T,GAAE8T,mBACA,CAAC,oCACD,qVAEF9T,GAAE8T,mBACA,CAAC,mCACD,4GAEF9T,GAAE8T,mBACA,CAAC,qDACD,+SAKJ,IAAMkB,GAAehV,GAAE+U,gBAEjBlG,GAAYC,cAAW,SAACoB,GAAD,MAAY,CACvCgF,OAAQ,CACN7L,MAAO6G,EAAMI,QAAQ6E,gBAAgBC,KAAW,MAChD/E,gBAAiB+E,KAAW,MAE9BC,OAAQ,CACNhM,MAAO6G,EAAMI,QAAQ6E,gBAAgBG,KAAW,MAChDjF,gBAAiBiF,KAAW,UA8GjB9P,OAAMC,MA1GI,WACvB,IAAMyJ,EAAUL,KADa,EAEGjJ,mBAAS,IAFZ,oBAEtBrK,EAFsB,KAEZga,EAFY,KAGvB9Z,EAAiBuI,YAAYnI,GAC7BgI,EAAWC,cAEX0R,EAAoB,WACxB3R,EAASnI,EAAY,CAAEH,SAAUA,KAEjCsI,EAASlI,EAAU,CAAEH,OAAQwE,GAAEqU,IAAI9Y,MACnCga,EAAY,KAGd,OACE,kBAACtP,GAAA,EAAD,CAAME,WAAS,EAACD,UAAU,UACxB,kBAACD,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,GAClB,kBAACF,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,EAACC,QAAS,GAC5B,kBAACH,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GAAIsM,GAAI,GACrB,kBAACnP,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CAAYC,MAAM,0BAClB,kBAAC7B,GAAA,EAAD,KACGyO,GAAalV,KAAI,SAACvE,EAAUX,GAC3B,OAAO,kBAAC4L,GAAA,EAAD,CAAY7D,IAAK/H,GAAQW,SAKxC,kBAAC0K,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GAAIsM,GAAI,GACrB,kBAACnP,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CACEC,MAAM,oBACNsN,UAAU,eACVC,OACE,kBAACC,GAAA,EAAD,CAAQ7O,aAAW,YAAY6E,UAAWsD,EAAQgG,QAAlD,OAKJ,kBAAC3O,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,EAACC,QAAS,EAAG+C,GAAI,IAClC1N,EAAeqE,KAAI,SAAC+V,EAASjb,GAC5B,OAAOA,EAAQ,IAAM,EACnB,kBAACqL,GAAA,EAAD,CACEI,MAAI,EACJ1D,IAAK/H,EACLuL,WAAS,EACTD,UAAU,MACVwH,QAAQ,aACRC,WAAW,SACXxE,GAAI,IAEJ,kBAAClD,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GACb,kBAACyM,GAAA,EAAD,CAAQhK,UAAWsD,EAAQgG,QAA3B,MAEF,kBAACjP,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,IACb,kBAAC3C,GAAA,EAAD,CAAYY,MAAM,QAAQyO,KAI9B,kBAAC5P,GAAA,EAAD,CACEkD,GAAI,GACJ/C,QAAS,EACTC,MAAI,EACJ1D,IAAK/H,EACLuL,WAAS,EACTD,UAAU,MACVwH,QAAQ,WACRC,WAAW,UAEX,kBAAC1H,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,IACb,kBAAC3C,GAAA,EAAD,CAAYY,MAAM,SAASyO,IAE7B,kBAAC5P,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GACb,kBAACyM,GAAA,EAAD,CAAQxO,MAAM,QAAQwE,UAAWsD,EAAQmG,QAAzC,YASZ,kBAAC1O,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,MAAM,UACNC,eAAe,iBACfL,QAAQ,WACRM,aAAW,YACX7H,MAAO3D,EACPyL,SAAU,SAACC,GAAD,OAAOsO,EAAYtO,EAAE/K,OAAOgD,QACtCgI,WAAY,SAACD,GACG,UAAVA,EAAEtE,KAAiB6S,OAG3B,kBAACrO,GAAA,EAAD,CAAQV,QAAQ,WAAWxC,QAASuR,GAApC,yBEpLDM,GAvBF,WACX,IACM7N,EAAqB,CACzBgB,GACAA,GACAA,IAGF,OACE,kBAAChD,GAAA,EAAD,CAAMI,MAAI,EAACF,WAAS,EAACD,UAAU,SAASE,QAAS,GAC/C,kBAACH,GAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,GAAD,OAEF,kBAACJ,GAAA,EAAD,CAAMI,MAAI,EAAC8C,GAAI,GAAIyE,GAAI,IACrB,kBAAC,GAAD,CACE5F,YAdY,CAAC,OAAQ,MAAO,iBAe5BC,mBAAoBA,EACpBC,SAAS,kBCDb2G,GAAYC,cAAW,SAACoB,GAAD,MAAY,CACvCnB,KAAM,CACJgH,QAAS,QAEXC,OAAO,eACJ9F,EAAM+F,YAAYC,GAAG,MAAQ,CAC5B3c,MARc,IASd4c,WAAY,IAGhBC,OAAQ,CACNC,OAAQnG,EAAMmG,OAAOL,OAAS,GAEhCM,WAAW,aACTC,YAAarG,EAAM9J,QAAQ,IAC1B8J,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAIbS,QAAStG,EAAMuG,OAAOD,QACtBE,YAAa,CACXnd,MAxBgB,KA0BlBod,QAAS,CACPC,SAAU,EACVjG,QAAST,EAAM9J,QAAQ,QAgIZyQ,OA5Hf,SAA0BnT,GAAQ,IACxB2D,EAAW3D,EAAX2D,OACF6H,EAAUL,KACVqB,EAAQ4G,eAHiB,EAIKtR,IAAMI,UAAS,GAJpB,oBAIxBmR,EAJwB,KAIZC,EAJY,KAMzBC,EAAqB,WACzBD,GAAeD,IAGX5Q,OACOxG,IAAX0H,EAAuB,kBAAMA,IAASiM,SAAS4D,WAAOvX,EAExD,OACE,yBAAKiM,UAAWsD,EAAQH,MACtB,kBAACsC,GAAA,EAAD,KACE,kBAAC8F,EAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAQhH,SAAS,QAAQxE,UAAWsD,EAAQkH,QAC1C,kBAACiB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEjO,MAAM,UACNtC,aAAW,cACXwQ,KAAK,QACLtT,QAASgT,EACTrL,UAAWsD,EAAQoH,YAEnB,kBAAC,KAAD,OAEF,kBAAC9P,GAAA,EAAD,CAAYC,QAAQ,KAAK+Q,QAAM,GAA/B,uBAKJ,kBAAC,KAAD,KACE,yBAAK5L,UAAWsD,EAAQ8G,OAAQjP,aAAW,mBAEzC,kBAAC0Q,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,GAAA,EAAD,CACEzR,UAAWA,EACXM,QAAQ,YACRoR,OAA4B,QAApB3H,EAAMhK,UAAsB,QAAU,OAC9CiL,KAAM4F,EACN3F,QAAS6F,EACT/H,QAAS,CACPiB,MAAOjB,EAAQwH,aAEjBoB,WAAY,CACVC,aAAa,IAGf,kBAAC,GAAD,QAGJ,kBAACN,GAAA,EAAD,CAAQO,QAAM,EAACL,eAAe,OAC5B,kBAACC,GAAA,EAAD,CACE1I,QAAS,CACPiB,MAAOjB,EAAQwH,aAEjBjQ,QAAQ,YACR0K,KAAM4F,GAEN,kBAACM,GAAA,EAAD,MACA,kBAAC,GAAD,SAIN,0BAAMzL,UAAWsD,EAAQyH,SACvB,yBAAK/K,UAAWsD,EAAQsH,UACxB,kBAACa,GAAA,EAAD,MACA,kBAACpR,GAAA,EAAD,CAAME,WAAS,EAACuH,QAAQ,SAASC,WAAW,UAC1C,kBAAC1H,GAAA,EAAD,CAAMI,MAAI,EAACuH,GAAI,EAAG6H,GAAI,EAAGhI,GAAI,IAC7B,kBAACxH,GAAA,EAAD,CACEI,MAAI,EACJF,WAAS,EACTyH,GAAI,EACJ6H,GAAI,GACJhI,GAAI,GACJC,QAAQ,SACRC,WAAW,UAEX,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEsK,OAAK,EACLC,KAAK,WACLC,OAAQ,SAACzU,GAAD,OAAW,kBAAC,GAASA,MAE/B,kBAAC,KAAD,CACEuU,OAAK,EACL1b,KAAK,eACL4b,OAAQ,SAACzU,GAAD,OAAW,kBAAC,GAASA,MAE/B,kBAAC,KAAD,CACEuU,OAAK,EACL1b,KAAK,eACL4b,OAAQ,SAACzU,GAAD,OAAW,kBAAC,GAASA,MAE/B,kBAAC,KAAD,CACEuU,OAAK,EACL1b,KAAK,eACL4b,OAAQ,SAACzU,GAAD,OAAW,kBAAC,GAASA,MAE/B,kBAAC,KAAD,CACEuU,OAAK,EACL1b,KAAK,eACL4b,OAAQ,SAACzU,GAAD,OAAW,kBAAC,GAASA,cCnJ3CwM,GAAQkI,YAAe,CAC3B9H,QAAS,CACPxC,KAAM,OACNK,QAAS,CACPkK,KAAM,UACNC,MAAO,kBACPC,KAAM,kBACNC,aAAc,WAEhBC,UAAW,CACTJ,KAAM,UACNC,MAAO,qBACPC,KAAM,oBACNC,aAAc,uBAEhBE,SAAU,CACRL,KAAM,UACNG,aAAc,WAEhBG,MAAO,CACLN,KAAMO,IAAIC,SAcDC,GAVH,WACV,OACE,kBAACC,EAAA,EAAD,CAAe7I,MAAOA,IACpB,kBAAC,IAAD,CAAU8I,MAAOA,IACf,kBAAC7B,EAAA,EAAD,MACA,kBAAC,GAAD,SC1BF8B,GAAcC,QACW,cAA7B7R,OAAO8R,SAASC,UAEe,UAA7B/R,OAAO8R,SAASC,UAEhB/R,OAAO8R,SAASC,SAAS1E,MACvB,2DAsCN,SAAS2E,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1f,QACfof,UAAUC,cAAcQ,YAI1B7d,QAAQC,IACN,iHAKEkd,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBxd,QAAQC,IAAI,sCAGRkd,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAzB,GACLvc,QAAQuc,MAAM,4CAA6CA,MC1FjE0B,IAASlC,OAAO,kBAAC,GAAD,MAAS7E,SAASgH,eAAe,SDgB1C,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,UAAwBnT,OAAO8R,SAAS7P,MACpDmR,SAAWpT,OAAO8R,SAASsB,OAIvC,OAGFpT,OAAOkM,iBAAiB,QAAQ,WAC9B,IAAM+F,EAAK,UAAMkB,UAAN,sBAEPvB,KAgEV,SAAiCK,EAAOC,GAEtCmB,MAAMpB,EAAO,CACXqB,QAAS,CAAE,iBAAkB,YAE5BhB,MAAK,SAAAiB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASza,QACO,MAAf0a,IAA8D,IAAvCA,EAAY/F,QAAQ,cAG5C0E,UAAUC,cAAcsB,MAAMpB,MAAK,SAAAC,GACjCA,EAAaoB,aAAarB,MAAK,WAC7BtS,OAAO8R,SAAS8B,eAKpB5B,GAAgBC,EAAOC,MAG1Ba,OAAM,WACLhe,QAAQC,IACN,oEAvFA6e,CAAwB5B,EAAOC,GAI/BC,UAAUC,cAAcsB,MAAMpB,MAAK,WACjCvd,QAAQC,IACN,iHAMJgd,GAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.c84e0714.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridTable\":\"Grid_gridTable__1LghC\",\"gridCell\":\"Grid_gridCell__3p4DB\",\"gridTooltip\":\"Grid_gridTooltip___eKIf\",\"blocked\":\"Grid_blocked__JkDxv\",\"checked\":\"Grid_checked__27eM_\",\"start\":\"Grid_start__myL7-\",\"end\":\"Grid_end__XB9oW\",\"fadeInChecked\":\"Grid_fadeInChecked__9eRlO\",\"closed\":\"Grid_closed__lDSnE\",\"fadeInClosed\":\"Grid_fadeInClosed__2m-0b\",\"path\":\"Grid_path__14bdQ\",\"fadeInPath\":\"Grid_fadeInPath__iQwuY\",\"tooltipRoot\":\"Grid_tooltipRoot__1JPCq\"};","import { computePath } from \"./aStarSearchAlgorithm\";\nimport { GRID_SIZE, Mode } from \"./constants\";\nimport { A_STAR, BLANK, LABYRINTH, RANDOM } from \"./presets\";\n\nconst { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst _initialState = (width, height) => {\n  return {\n    grid: A_STAR,\n    mode: Mode.draw,\n    start: { x: 2, y: 2 },\n    end: { x: width - 3, y: height - 3 },\n    preset: \"a-star-text\",\n  };\n};\n// const _changeCellStatus = (state, { x, y }, status) => {\n//   const newState = _.cloneDeep(state);\n//   newState.path = undefined;\n\n//   if (status === \"blocked\" && newState.grid[x][y].status === \"blocked\") {\n//     newState.grid[x][y] = { status: \"empty\" };\n//   } else {\n//     newState.grid[x][y] = { status: status };\n//   }\n//   return newState;\n// };\nconst _changePreset = (state, preset) => {\n  if (!preset) return state;\n\n  // console.log(preset);\n  // const base = _initialState(GRID_SIZE, GRID_SIZE);\n  switch (preset) {\n    case \"a-star-text\":\n      return A_STAR;\n    case \"labyrith\":\n      return LABYRINTH;\n    case \"blank\":\n      return BLANK;\n    case \"random\":\n      return RANDOM();\n    default:\n      return RANDOM();\n  }\n};\nconst aStarSearchSlice = createSlice({\n  name: \"aStarSearch\",\n  initialState: _initialState(GRID_SIZE, GRID_SIZE),\n  reducers: {\n    setCellAsBlocked: (state, action) => {\n      const { x, y } = action.payload;\n\n      state.grid[x][y].status = \"blocked\";\n    },\n    setMode: (state, action) => {\n      state.mode = action.payload.mode;\n    },\n    setStart: (state, action) => {\n      state.start.x = action.payload.x;\n      state.start.y = action.payload.y;\n      state.mode = Mode.draw;\n      state.path = undefined;\n    },\n    setEnd: (state, action) => {\n      state.end.x = action.payload.x;\n      state.end.y = action.payload.y;\n      state.mode = Mode.draw;\n      state.path = undefined;\n    },\n    calculatePath: (state, action) => {\n      state.path = computePath(state.grid, state.start, state.end);\n    },\n    clearGrid: (state, action) => {\n      state.path = undefined;\n      state.grid = _changePreset(state, state.preset);\n    },\n    changePreset: (state, action) => {\n      state.path = undefined;\n      state.grid = _changePreset(state, action.payload.preset);\n      state.preset = action.payload.preset;\n    },\n  },\n});\n\nexport const {\n  setCellAsBlocked,\n  setMode,\n  setStart,\n  setEnd,\n  calculatePath,\n  clearGrid,\n  changePreset,\n} = aStarSearchSlice.actions;\n\nexport const selectGrid = (state) => state.aStarSearch.grid;\nexport const selectMode = (state) => state.aStarSearch.mode;\nexport const selectStart = (state) => state.aStarSearch.start;\nexport const selectEnd = (state) => state.aStarSearch.end;\nexport const selectPreset = (state) => state.aStarSearch.preset;\nexport const selectPath = (state) => state.aStarSearch.path;\n\nexport default aStarSearchSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst graphSlice = createSlice({\n  name: \"graph\",\n  initialState: {\n    node: [],\n    graph: {},\n    selectedNode: 0,\n    DFSPath: [],\n    BFSPath: [],\n  },\n  reducers: {\n    addNode: (state, action) => {\n      const { graph, node, selectedNode } = state;\n      const { name } = action.payload;\n      state.node.push(name);\n\n      if (name !== node[selectedNode]) {\n        graph[node[selectedNode]] = {\n          ...graph[node[selectedNode]],\n          [node.length - 1]: name,\n        };\n      }\n    },\n    resetGraph: (state, action) => {\n      state.node = [];\n      state.graph = {};\n      state.selectedNode = 0;\n      state.DFSPath = [];\n      state.BFSPath = [];\n    },\n    removeNode: (state, action) => {},\n    changeHighlightedNode: (state, action) => {\n      state.selectedNode = action.payload.index;\n    },\n    showDFS: (state, action) => {\n      state.DFSPath = action.payload.DFSPath;\n    },\n    showBFS: (state, action) => {\n      state.BFSPath = action.payload.BFSPath;\n    },\n  },\n});\n\nexport const {\n  addNode,\n  removeNode,\n  showDFS,\n  showBFS,\n  changeHighlightedNode,\n  resetGraph,\n} = graphSlice.actions;\n\nexport const selectNode = (state) => state.graph.node;\nexport const selectGraph = (state) => state.graph.graph;\nexport const selectHighlightedNode = (state) => state.graph.selectedNode;\nexport const selectBFSPath = (state) => state.graph.BFSPath;\nexport const selectDFSPath = (state) => state.graph.DFSPath;\n\nexport default graphSlice.reducer;\n","const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst chatbotSlice = createSlice({\n  name: \"chatbot\",\n  initialState: {\n    question: \"\",\n    answer: \"\",\n    messageHistory: [],\n  },\n  reducers: {\n    addQuestion: (state, action) => {\n      state.question = action.payload.question;\n      state.messageHistory.push(action.payload.question);\n    },\n    addAnswer: (state, action) => {\n      state.answer = action.payload.answer;\n      state.messageHistory.push(action.payload.answer);\n    },\n    reset: (state, action) => {\n      state.messageHistory = [];\n      state.answer = \"\";\n      state.question = \"\";\n    },\n  },\n});\n\nexport const { addQuestion, addAnswer, reset } = chatbotSlice.actions;\n\nexport const selectAnswer = (state) => state.chatbot.answer;\nexport const selectQuestion = (state) => state.chatbot.question;\nexport const selectMessageHistory = (state) => state.chatbot.messageHistory;\n\nexport default chatbotSlice.reducer;\n","class WaterJugClass {\n  constructor(x=3, y=5, target=4) {\n    this.capX = x;\n    this.capY = y;\n    this.x = 0;\n    this.y = 0;\n    this.target = target;\n    this.path = [];\n  }\n  rule(x, d = 0) {\n    this.printVolume();\n    console.log(`Rule ${x}`);\n    switch (x) {\n      case 1:\n        if (this.x < this.capX) {\n          this.x = this.capX;\n        }\n        console.log(\"Fill jugX completely\");\n        break;\n      // fill capY gallon jug completely\n      case 2:\n        if (this.y < this.capY) {\n          this.y = this.capY;\n        }\n        console.log(\"Fill jugY completely\");\n        break;\n\n      // pour some part from x jug\n      case 3:\n        if (this.x > 0) {\n          this.x = this.x - d;\n        }\n        console.log(\"Pour Some part D from X jug\");\n        break;\n      // pour some part from y jug\n      case 4:\n        if (this.y > 0) {\n          this.y = this.y - d;\n        }\n        console.log(\"Pour Some part D from Y jug\");\n        break;\n      // empty jug x\n      case 5:\n        if (this.x > 0) {\n          this.x = 0;\n        }\n        console.log(\"Empty jugX\");\n        break;\n      // empty jug y\n      case 6:\n        if (this.y > 0) {\n          this.y = 0;\n        }\n        console.log(\"Empty jugY\");\n        break;\n      // pour water from y jug to fill x jug\n      case 7:\n        if (this.x + this.y < this.capX + this.capY) {\n          this.y = this.y - (this.capX - this.x);\n          this.x = this.capX;\n        }\n        console.log(\"Pour from jugY to fill jugX\");\n        break;\n      //pour water from x jug to fill y jug\n      case 8:\n        if (this.x + this.y < this.capX + this.capY) {\n          this.x = this.x - (this.capY - this.y);\n          this.y = this.capY;\n        }\n        console.log(\"Pour from jugX to fill jugY\");\n        break;\n      // pour all water from y jug to x jug\n      case 9:\n        if (this.x + this.y < this.capX) {\n          this.x = this.x + this.y;\n          this.y = 0;\n        }\n        console.log(\"Pour all from jugY to jugX\");\n        break;\n      //pour all water from x jug to y jug\n      case 10:\n        if (this.x + this.y < this.capY) {\n          this.x = 0;\n          this.y = this.x + this.y;\n        }\n        console.log(\"Pour all from jugX to jugY\");\n        break;\n      default:\n        console.log(\"Unidentified rule\");\n    }\n\n    this.printVolume();\n    console.log(\"---\");\n    this.appendPath();\n  }\n  printVolume = () => {\n    console.log(`[JugX=${this.x}, JugY=${this.y}]`);\n  };\n  // // print each state leading upto solution\n  printPath = () => {\n    for (let state of this.path) {\n      if (state === this.path[-1]) {\n        console.log(`[JugX:{${state[0]}, JugY:${state[1]}]`);\n        continue;\n        // console.log(\"[JugX){{state[0]}, JugY){{state[1]}]\");\n      }\n    }\n  };\n  // // add new state generated to path\n  appendPath = () => {\n    this.path.push([this.x, this.y]);\n  };\n  reset = () => {\n    this.x = 0;\n    this.y = 0;\n    this.path = [];\n  };\n  pour = () => {\n    this.reset();\n    let yJug = this.capY;\n    let xJug = 0;\n    this.rule(2)\n    let step = 1;\n    while (!this.target !== yJug && !this.target !== xJug) {\n      console.log(`(${xJug},${yJug})`);\n      let temp = 0;\n      if (yJug < this.capX - xJug) {\n        temp = yJug;\n\n           this.rule(9)\n      } else {\n        temp = this.capX - xJug;\n        this.rule(7)\n      \n      }\n      xJug = xJug + temp;\n      yJug = yJug - temp;\n\n      // //             temp = min(yJug, this.capX-xJug)\n      // //             xJug = xJug + temp\n      // //             yJug = yJug - temp\n\n      console.log(`(${xJug},${yJug})`);\n\n      step = step + 1;\n      if (yJug === this.target || xJug === this.target) {\n        break;\n      }\n      if (yJug === 0) {\n        yJug = this.capY;\n        this.rule(2)\n        step = step + 1;\n      }\n      if (xJug === this.capX) {\n        xJug = 0;\n        this.rule(5)\n        step = step + 1;\n      }\n    }\n  };\n  //  Solve using rules\n  pourRule = () => {\n    this.reset();\n    this.rule(2);\n    let step = 1;\n    while (1) {\n      if (this.y === this.target || this.x === this.target) {\n        break;\n      }\n      if (this.y < this.capX - this.x) {\n        this.rule(9);\n      } else {\n        this.rule(7);\n      }\n      step = step + 1;\n      if (this.y === this.target || this.x === this.target) {\n        break;\n      }\n      if (this.y === 0) {\n        this.rule(2);\n        step = step + 1;\n      }\n      if (this.x === this.capX) {\n        this.rule(5);\n        step = step + 1;\n      }\n    }\n\n    return step;\n  };\n  // Reverse the capacity of jugs\n  reverseJugCapacity = () => {\n    const temp = this.capX;\n\n    this.capX = this.capY;\n    this.capY = temp;\n  };\n  // Solve  for both x,y and y,x conditions\n  solve = () => {\n    console.log(`With JugXCapacity ${this.capX} and JugYCapacity ${this.capY}`);\n    console.log(`Total steps to solve  ${this.pourRule()}`);\n    this.printPath();\n    console.log(\"*\" * 100);\n    console.log(`With JugXCapacity ${this.capX} and JugYCapacity ${this.capY}`);\n    this.reverseJugCapacity();\n    console.log(`Total steps to solve  ${this.pourRule()}`);\n    this.printPath();\n  };\n}\n\nexport default WaterJugClass;\n","import WaterJugClass from \"./WaterjugClass\";\n\nconst { createSlice } = require(\"@reduxjs/toolkit\");\nconst waterjug = new WaterJugClass();\nconst waterjugSlice = createSlice({\n  name: \"waterjug\",\n  initialState: {\n    capacityX: 3,\n    capacityY: 5,\n    target: 4,\n    path: [],\n  },\n  reducers: {\n    addCapacityX: (state, action) => {\n      state.capacityX = action.payload.capacityX;\n      waterjug.capX = state.capacityX;\n    },\n    addCapacityY: (state, action) => {\n      state.capacityY = action.payload.capacityY;\n      waterjug.capY = state.capacityY;\n    },\n    addTarget: (state, action) => {\n      state.target = action.payload.target;\n    },\n    computePath: (state, action) => {\n      waterjug.pour();\n      console.log(waterjug.path);\n      state.path = [...waterjug.path];\n    },\n    reset: (state, action) => {\n      state.path = [];\n    },\n  },\n});\n\nexport const {\n  addCapacityX,\n  addCapacityY,\n  computePath,\n  addTarget,\n  reset,\n} = waterjugSlice.actions;\n\nexport const selectCapacityX = (state) => state.waterjug.capacityX;\nexport const selectCapacityY = (state) => state.waterjug.capacityY;\nexport const selectPath = (state) => state.waterjug.path;\nexport const selectTarget = (state) => state.waterjug.target;\n\nexport default waterjugSlice.reducer;\n","const { range, minBy, remove } = require(\"lodash\");\n\nconst generateGrid = (numbeOfRows, numberOfColumns, value) => {\n  return range(numbeOfRows).map((x) =>\n    range(numberOfColumns).map((y) => ({\n      ...value,\n      x,\n      y,\n    }))\n  );\n};\n\nconst coordinatesToCheck = [\n  { y: 0, x: -1 },\n  { y: 1, x: -1 },\n  { y: 1, x: 0 },\n  { y: 1, x: 1 },\n  { y: 0, x: 1 },\n  { y: -1, x: 1 },\n  { y: -1, x: 0 },\n  { y: -1, x: -1 },\n];\n\nconst getDistance = (a, b) => {\n  const colOffset = Math.abs(a.y - b.y);\n  const rowOffset = Math.abs(a.x - b.x);\n  const numberOfStraightSegments = Math.abs(colOffset - rowOffset);\n  const numberOfDiagonalSegments =\n    Math.max(colOffset, rowOffset) - numberOfStraightSegments;\n\n  return numberOfStraightSegments * 10 + numberOfDiagonalSegments * 14; // 14 ~ 10 * sqrt(2)\n};\n\nexport const computePath = (mainGrid, start, end) => {\n  const gridLength = mainGrid.length;\n\n  let counter = 0;\n  let openList = [];\n  const grid = generateGrid(gridLength, gridLength, {\n    fCost: 0,\n    gCost: 0,\n    hCost: 0,\n    parent: undefined,\n    isClosed: false,\n    isPath: false,\n    counter: 0,\n    x: 0,\n    y: 0,\n  });\n  openList.push(grid[start.x][start.y]);\n\n  while (openList.length > 0) {\n    const currentCell = minBy(openList, (c) => c.fCost);\n\n    if (!currentCell) {\n      // no path found\n      return grid;\n    }\n\n    if (currentCell.x === end.x && currentCell.y === end.y) {\n      let curr = currentCell;\n\n      while (curr.parent) {\n        grid[curr.x][curr.y].isPath = true;\n        curr = curr.parent;\n      }\n\n      return grid;\n    }\n\n    remove(openList, (c) => c.x === currentCell.x && c.y === currentCell.y);\n    currentCell.isClosed = true;\n    // eslint-disable-next-line no-loop-func\n    coordinatesToCheck.forEach((coordinatesToCheck) => {\n      const { x, y } = {\n        x: currentCell.x + coordinatesToCheck.x,\n        y: currentCell.y + coordinatesToCheck.y,\n      };\n\n      if (\n        x < 0 ||\n        x >= gridLength ||\n        y < 0 ||\n        y >= gridLength ||\n        (start.x === x && start.y === y) ||\n        grid[x][y].isClosed ||\n        mainGrid[x][y].status === \"blocked\"\n      ) {\n        return;\n      }\n\n      const neighbourCell = grid[x][y];\n\n      const gCost = currentCell.gCost + getDistance(currentCell, neighbourCell);\n      let gCostIsBest = false;\n\n      if (!openList.find((c) => c.x === x && c.y === y)) {\n        gCostIsBest = true;\n        neighbourCell.hCost = getDistance(neighbourCell, end);\n        openList.push(neighbourCell);\n      } else if (gCost < neighbourCell.gCost) {\n        gCostIsBest = true;\n      }\n\n      if (gCostIsBest) {\n        neighbourCell.parent = currentCell;\n        neighbourCell.gCost = gCost;\n        neighbourCell.fCost = neighbourCell.gCost + neighbourCell.hCost;\n        counter = counter + 1;\n        neighbourCell.counter = counter;\n      }\n    });\n  }\n  // No path found\n  return grid;\n};\n","export const GRID_SIZE = 32;\n\nexport const Mode = {\n  draw: 0,\n  setStart: 1,\n  setEnd: 2,\n};\n","import _ from \"lodash\";\nimport { GRID_SIZE } from \"./constants\";\n\nconst E = { status: \"empty\" };\nconst B = { status: \"blocked\" };\n\nexport const BLANK = _.range(GRID_SIZE).map(() =>\n  _.range(GRID_SIZE).map(() => E)\n);\n\nexport const RANDOM = () =>\n  _.range(GRID_SIZE).map(() =>\n    _.range(GRID_SIZE).map(() => {\n      return Math.random() * 10 < 2 ? B : E;\n    })\n  );\nexport const LABYRINTH = [\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n];\nexport const A_STAR = [\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    B,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    B,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    B,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n  [\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n    E,\n  ],\n];\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport graphReducer from \"../features/graph/graphSlice\";\r\nimport chatbotReducer from \"../features/chatbot/chatbotSlice\";\r\nimport waterjugReducer from \"../features/waterjug/waterjugSlice\";\r\nimport aStarSearchReducer from \"../features/aStarSearch/aStarSearchSlice\";\r\nexport default configureStore({\r\n  reducer: {\r\n    graph: graphReducer,\r\n    waterjug: waterjugReducer,\r\n    chatbot: chatbotReducer,\r\n    aStarSearch: aStarSearchReducer,\r\n  },\r\n});\r\n","class Graph {\n  constructor() {\n    this.graph = [];\n    this.stack = [];\n    this.queue = [];\n  }\n  addEdge = (node, newNode) => {\n    if (this.graph[node] === undefined) this.graph[node] = [];\n    this.graph[node].push(newNode);\n  };\n\n  DFS = (key, rev = false) => {\n    let dfs = [];\n    this.stack.push(key);\n    while (1) {\n      if (this.stack.length === 0) {\n        // array empty or does not exist\n        break;\n      }\n      const popped = this.stack.pop();\n\n      dfs.push(popped);\n      if (this.graph[popped] === undefined) {\n      } else {\n        let childData;\n        if (rev) childData = this.graph[popped].slice().reverse();\n        else childData = this.graph[popped];\n        for (let i of childData) {\n          this.stack.push(i);\n        }\n      }\n    }\n    return dfs;\n  };\n  BFS = (key) => {\n    this.queue.push(key);\n    let bfs = [];\n    while (1) {\n      if (this.queue.length === 0) {\n        // array empty or does not exist\n        break;\n      }\n      const popped = this.queue.shift();\n      bfs.push(popped);\n\n      if (this.graph[popped] === undefined) {\n      } else {\n        const childData = this.graph[popped];\n        for (let i of childData) {\n          this.queue.push(i);\n        }\n      }\n    }\n    return bfs;\n  };\n}\nexport default Graph;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeHighlightedNode,\n  selectHighlightedNode,\n} from \"../features/graph/graphSlice\";\n\nconst GraphNode = (props) => {\n  const { name, index, x_position, y_position } = props;\n  const dispatch = useDispatch();\n  const highlightedNode = useSelector(selectHighlightedNode);\n  let strokeColor = \"black\";\n  if (highlightedNode === index) strokeColor = \"green\";\n  return (\n    <>\n      <svg\n        x={x_position}\n        y={y_position}\n        onClick={() => dispatch(changeHighlightedNode({ index: index }))}\n      >\n        <circle\n          cx=\"30\"\n          cy=\"30\"\n          r=\"20\"\n          stroke={strokeColor}\n          strokeWidth=\"3\"\n          fill=\"red\"\n          fillOpacity=\"0.5\"\n        />\n        <text textAnchor=\"middle\" x=\"30\" y=\"30\">\n          {name}\n        </text>\n      </svg>\n    </>\n  );\n};\nexport default GraphNode;\n","import React from \"react\";\nimport GraphNode from \"./GraphNode\";\nimport { useSelector } from \"react-redux\";\nimport { selectGraph } from \"../features/graph/graphSlice\";\n\nconst GraphTree = (props) => {\n  const {\n    parentName,\n    parentIndex,\n    x_position = 0,\n    y_position = 0,\n    height,\n    width,\n  } = props;\n  const graph = useSelector(selectGraph);\n  let renderChildrenList = false;\n\n  const countChildren = (object) => {\n    // console.log(\"Children\", object);\n    if (typeof object === \"undefined\") return 0;\n    let count = 0;\n    for (let key of Object.keys(object)) {\n      count++;\n      count += countChildren(graph[object[key]]);\n    }\n    return count;\n  };\n\n  const childObject = graph[parentName];\n\n  let len = 0;\n  let childList = [];\n  len = countChildren(childObject);\n\n  if (typeof childObject !== \"undefined\") {\n    renderChildrenList = true;\n\n    for (let key of Object.keys(childObject)) {\n      childList.push([key, childObject[key]]);\n    }\n  }\n\n  // console.log(\"Maximum children \" + parentName, len);\n\n  let varSpacing = -len * 25;\n  return (\n    <svg\n      x_position={x_position}\n      y_position={y_position}\n      width={width}\n      height={height}\n    >\n      <GraphNode\n        x_position={parentIndex === 0 ? width / 2 : x_position}\n        y_position={y_position}\n        name={parentName}\n        index={parentIndex}\n      />\n\n      {renderChildrenList\n        ? childList.map((name, index) => {\n            varSpacing += len * 25;\n            return typeof graph[name[1]] !== \"undefined\" ? (\n              <GraphTree\n                x_position={x_position + varSpacing}\n                y_position={y_position + 100}\n                width={width}\n                height={height}\n                key={index}\n                parentName={name[1]}\n                parentIndex={name[0]}\n              />\n            ) : (\n              <GraphTree\n                x_position={x_position + varSpacing}\n                y_position={y_position + 100}\n                key={index}\n                parentName={name[1]}\n                parentIndex={name[0]}\n              />\n            );\n          })\n        : null}\n    </svg>\n  );\n};\nexport default GraphTree;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  addNode,\n  showDFS,\n  showBFS,\n  selectNode,\n  selectHighlightedNode,\n  selectBFSPath,\n  selectDFSPath,\n  resetGraph,\n} from \"./graphSlice\";\n\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  CardActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport Graph from \"./GraphClass\";\nimport GraphTree from \"../../components/GraphTree\";\n\nlet g = new Graph();\n\nconst GraphComponent = () => {\n  const nodeList = useSelector(selectNode);\n  const highlightedNode = useSelector(selectHighlightedNode);\n\n  const bfs = useSelector(selectBFSPath);\n  const dfs = useSelector(selectDFSPath);\n  const dispatch = useDispatch();\n  const [nodeName, setNodeName] = useState(\"\");\n\n  const handleNewNodeSubmit = () => {\n    if (nodeList.includes(nodeName)) return;\n    dispatch(addNode({ name: nodeName || \"Node\" }));\n    if (typeof nodeList[highlightedNode] !== \"undefined\")\n      g.addEdge(nodeList[highlightedNode], nodeName);\n    setNodeName(\"\");\n  };\n\n  const handleShowDFS = () => {\n    const dfs = g.DFS(nodeList[highlightedNode], true);\n    dispatch(showDFS({ DFSPath: dfs }));\n  };\n\n  const handleShowBFS = () => {\n    const bfs = g.BFS(nodeList[highlightedNode]);\n    dispatch(showBFS({ BFSPath: bfs }));\n  };\n\n  return (\n    <Grid direction=\"column\" container spacing={2}>\n      <Grid item>\n        <Card>\n          <CardContent>\n            <Grid container>\n              <Grid item>\n                <Typography variant=\"h5\">Breadth First Search:</Typography>\n                <Typography>\n                  {bfs.length !== 0\n                    ? bfs.map((data) => {\n                        if (data === bfs[bfs.length - 1]) return data;\n                        else return data + \"->\";\n                      })\n                    : \"(BFS Path)\"}\n                </Typography>\n                <Typography variant=\"h5\">Depth First Search:</Typography>\n                <Typography>\n                  {dfs.length !== 0\n                    ? dfs.map((data) => {\n                        if (data === dfs[dfs.length - 1]) return data;\n                        else return data + \"->\";\n                      })\n                    : \"(DFS Path)\"}\n                </Typography>\n                <Typography>Enter node name to draw tree graph.</Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions>\n            <TextField\n              label=\"Node Name\"\n              plaardceholder=\"Node\"\n              variant=\"outlined\"\n              aria-label=\"Node name\"\n              value={nodeName}\n              onChange={(e) => setNodeName(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") handleNewNodeSubmit();\n              }}\n            />\n            <Button variant=\"outlined\" onClick={handleNewNodeSubmit}>\n              Add node\n            </Button>\n            <Button variant=\"outlined\" onClick={handleShowDFS}>\n              Show DFS\n            </Button>\n            <Button variant=\"outlined\" onClick={handleShowBFS}>\n              Show BFS\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                g = new Graph();\n                dispatch(resetGraph());\n              }}\n            >\n              Reset Tree Graph\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n\n      <Grid item>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h4\" align=\"center\">\n              Tree Graph\n            </Typography>\n            {nodeList.length !== 0 ? (\n              <GraphTree\n                width={window.innerWidth / 2 + window.innerWidth / 4}\n                height={600}\n                parentName={nodeList[0]}\n                parentIndex={0}\n              />\n            ) : null}\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\nexport default React.memo(GraphComponent);\n","import { Card, CardContent, CardHeader, Tab, Tabs } from \"@material-ui/core\";\nimport React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\n\nimport { dracula } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { PropTypes } from \"prop-types\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <> {children} </>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\nconst CodeBlock = (props) => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const { tabNameList, tabCodeSnippetList, language } = props;\n  return (\n    <Card>\n      <CardHeader title=\"Code\" />\n      <CardContent>\n        <Tabs value={value} onChange={handleChange} aria-label=\"Tree Graph\">\n          {tabNameList.map((name, index) => {\n            return <Tab key={index} label={name} {...a11yProps(index)} />;\n          })}\n        </Tabs>\n        {tabCodeSnippetList.map((codeSnippet, index) => {\n          return (\n            <TabPanel value={value} key={index} index={index}>\n              <SyntaxHighlighter\n                language={language}\n                style={dracula}\n                lineProps={{\n                  style: { wordBreak: \"break-all\", whiteSpace: \"pre-wrap\" },\n                }}\n                wrapLines={true}\n              >\n                {codeSnippet}\n              </SyntaxHighlighter>\n            </TabPanel>\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CodeBlock;\n","export const snippets = {\n  dfs: `\n  DFS = (key, rev = false) => {\n    let dfs = [];\n    this.stack.push(key);\n    while (1) {\n      if (this.stack.length === 0) {\n        // array empty or does not exist\n        break;\n      }\n      const popped = this.stack.pop();\n\n      dfs.push(popped);\n      if (this.graph[popped] === undefined) {\n      } else {\n        let childData;\n        if (rev) childData = this.graph[popped].slice().reverse();\n        else childData = this.graph[popped];\n        for (let i of childData) {\n          this.stack.push(i);\n        }\n      }\n    }\n    return dfs;\n  };`,\n  bfs: `\n  BFS = (key) => {\n    this.queue.push(key);\n    let bfs = [];\n    while (1) {\n      if (this.queue.length === 0) {\n        // array empty or does not exist\n        break;\n      }\n      const popped = this.queue.shift();\n      bfs.push(popped);\n\n      if (this.graph[popped] === undefined) {\n      } else {\n        const childData = this.graph[popped];\n        for (let i of childData) {\n          this.queue.push(i);\n        }\n      }\n    }\n    return bfs;\n  };`,\n  graphClass: `\n  class Graph {\n    constructor() {\n      this.graph = [];\n      this.stack = [];\n      this.queue = [];\n    }\n    addEdge = (node, newNode) => {\n      if (this.graph[node] === undefined) this.graph[node] = [];\n      this.graph[node].push(newNode);\n    };\n  \n    DFS = (key, rev = false) => {\n      let dfs = [];\n      this.stack.push(key);\n      while (1) {\n        if (this.stack.length === 0) {\n          // array empty or does not exist\n          break;\n        }\n        const popped = this.stack.pop();\n  \n        dfs.push(popped);\n        if (this.graph[popped] === undefined) {\n        } else {\n          let childData;\n          if (rev) childData = this.graph[popped].slice().reverse();\n          else childData = this.graph[popped];\n          for (let i of childData) {\n            this.stack.push(i);\n          }\n        }\n      }\n      return dfs;\n    };\n    BFS = (key) => {\n      this.queue.push(key);\n      let bfs = [];\n      while (1) {\n        if (this.queue.length === 0) {\n          // array empty or does not exist\n          break;\n        }\n        const popped = this.queue.shift();\n        bfs.push(popped);\n  \n        if (this.graph[popped] === undefined) {\n        } else {\n          const childData = this.graph[popped];\n          for (let i of childData) {\n            this.queue.push(i);\n          }\n        }\n      }\n      return bfs;\n    };\n  }\n  `,\n  water_jug: `\n  class WaterJug():\n    def __init__(self,x,y,target):\n        self.capX = x\n        self.capY = y\n        self.x = 0\n        self.y = 0\n        self.targe,end='\\\\n\\\\n\\\\n't = target\n        self.path = []\n        \n    def rule(self,x, d=0):\n        w.printVolume()\n        print('Rule {}'.format(x),end=' ')\n        # fill capX gallon jug completely\n        if(x==1):\n                if self.x<self.capX:\n                    self.x=self.capX\n                print('Fill jugX completely')\n        # fill capY gallon jug completely\n        elif (x==2):\n                if self.y<self.capY:\n                    self.y=self.capY\n                print('Fill jugY completely')\n        # pour some part from x jug\n        elif(x==3):\n                if self.x>0:\n                    self.x= self.x - d\n                print('Pour Some part D from X jug')\n        # pour some part from y jug        \n        elif(x==4):\n                if self.y>0:\n                    self.y = self.y - d\n                \n                print('Pour Some part D from Y jug')\n        # empty jug x        \n        elif(x==5):\n                if self.x>0:\n                    self.x=0\n                print('Empty jugX')\n        # empty jug y        \n        elif(x==6):\n                if self.y>0:\n                    self.y=0\n                print('Empty jugY')\n        # pour water from y jug to fill x jug        \n        elif(x==7):\n                if self.x+self.y < self.capX+self.capY:\n                    self.y= self.y-(self.capX-self.x)\n                    self.x = self.capX\n                print('Pour from jugY to fill jugX')\n        #pour water from x jug to fill y jug\n        elif(x==8):\n                if self.x+self.y < self.capX+self.capY:\n                    self.x=self.x-(self.capY-self.y)\n                    self.y = self.capY\n                print('Pour from jugX to fill jugY')\n        # pour all water from y jug to x jug\n        elif(x==9):\n                if self.x+self.y < self.capX:\n                    self.x= self.x+self.y\n                    self.y=0\n                print('Pour all from jugY to jugX')\n        #pour all water from x jug to y jug\n        elif(x==10):\n                if self.x+self.y < self.capY:\n                    self.x=0\n                    self.y=self.x+self.y     \n                    print('Pour all from jugX to jugY')\n\n        w.printVolume()\n        print('---')\n        self.appendPath()\n             \n    def printVolume(self):\n        print('[JugX={}, JugY={}]'.format(self.x, self.y))\n    \n    # print each state leading upto solution\n    def printPath(self):\n        for state in self.path:\n            if state==self.path[-1]:\n                print(f'[JugX:{state[0]}, JugY:{state[1]}]')\n                continue\n            print(f'[JugX:{state[0]}, JugY:{state[1]}]', end='->')\n    \n    # add new state generated to path\n    def appendPath(self):\n        self.path.append([self.x, self.y])\n    \n    def reset(self):\n        self.x=0\n        self.y=0\n        self.path=[]\n        \n    def pour(self): \n        self.reset()\n        yJug= self.capY\n        xJug=0\n#         self.rule(2)\n        step = 1\n        while ((yJug  is not self.target) and (xJug is not self.target)): \n            print('({},{})'.format(xJug, yJug))\n            \n\n            if(yJug < (self.capX-xJug)):\n                temp = yJug\n#                 self.rule(9)\n            else:\n                temp = (self.capX-xJug)\n#                 self.rule(7)\n            xJug = xJug + temp\n            yJug = yJug - temp\n\n#             temp = min(yJug, self.capX-xJug) \n#             xJug = xJug + temp \n#             yJug = yJug - temp \n\n            print('({},{})'.format(xJug, yJug))\n\n            step =  step + 1\n            if ((yJug == self.target) or (xJug == self.target)): \n                break\n\n            if yJug == 0: \n                yJug = self.capY\n#                 self.rule(2)\n                step =  step + 1\n\n            if xJug == self.capX: \n                xJug = 0\n#                 self.rule(5)\n                step =  step + 1\n    \n    # Solve using rules\n    def pourRule(self):\n        self.reset()\n        self.rule(2)\n        step = 1\n        while(1):\n            if(self.y==self.target or self.x==self.target):\n                break\n            \n            if(self.y < (self.capX-self.x)):\n                self.rule(9)\n            else:\n                self.rule(7)\n            \n            step=step+1\n            if(self.y==self.target or self.x==self.target):\n                break\n            \n            if self.y==0:\n                self.rule(2)\n                step = step + 1\n            \n            if self.x==self.capX:\n                self.rule(5)\n                step = step+1\n        return step \n\n    # Reverse the capacity of jugs\n    def reverseJugCapacity(self):\n        self.capX, self.capY = self.capY, self.capX\n    \n    # Solve  for both x,y and y,x conditions \n    def solve(self):\n        print(f'With JugXCapacity {self.capX} and JugYCapacity {self.capY}',end='\\\\n\\\\n\\\\n')\n        print(f'Total steps to solve : {self.pourRule()}',end='\\\\n\\\\n')\n        self.printPath()\n        print('*'*100)\n        print(f'With JugXCapacity {self.capX} and JugYCapacity {self.capY}',end='\\\\n\\\\n\\\\n')\n        self.reverseJugCapacity()\n        print(f'Total steps to solve : {self.pourRule()}',end='\\\\n\\\\n')\n        self.printPath()\n  `,\n  water_jug_pour_rule: `\n  # Solve using rules\n  def pourRule(self):\n      self.reset()\n      self.rule(2)\n      step = 1\n      while(1):\n          if(self.y==self.target or self.x==self.target):\n              break\n          \n          if(self.y < (self.capX-self.x)):\n              self.rule(9)\n          else:\n              self.rule(7)\n          \n          step=step+1\n          if(self.y==self.target or self.x==self.target):\n              break\n          \n          if self.y==0:\n              self.rule(2)\n              step = step + 1\n          \n          if self.x==self.capX:\n              self.rule(5)\n              step = step+1\n      return step \n  `,\n  water_jug_rules: `\n  def rule(self,x, d=0):\n    w.printVolume()\n    print('Rule {}'.format(x),end=' ')\n    # fill capX gallon jug completely\n    if(x==1):\n            if self.x<self.capX:\n                self.x=self.capX\n            print('Fill jugX completely')\n    # fill capY gallon jug completely\n    elif (x==2):\n            if self.y<self.capY:\n                self.y=self.capY\n            print('Fill jugY completely')\n    # pour some part from x jug\n    elif(x==3):\n            if self.x>0:\n                self.x= self.x - d\n            print('Pour Some part D from X jug')\n    # pour some part from y jug        \n    elif(x==4):\n            if self.y>0:\n                self.y = self.y - d\n            \n            print('Pour Some part D from Y jug')\n    # empty jug x        \n    elif(x==5):\n            if self.x>0:\n                self.x=0\n            print('Empty jugX')\n    # empty jug y        \n    elif(x==6):\n            if self.y>0:\n                self.y=0\n            print('Empty jugY')\n    # pour water from y jug to fill x jug        \n    elif(x==7):\n            if self.x+self.y < self.capX+self.capY:\n                self.y= self.y-(self.capX-self.x)\n                self.x = self.capX\n            print('Pour from jugY to fill jugX')\n    #pour water from x jug to fill y jug\n    elif(x==8):\n            if self.x+self.y < self.capX+self.capY:\n                self.x=self.x-(self.capY-self.y)\n                self.y = self.capY\n            print('Pour from jugX to fill jugY')\n    # pour all water from y jug to x jug\n    elif(x==9):\n            if self.x+self.y < self.capX:\n                self.x= self.x+self.y\n                self.y=0\n            print('Pour all from jugY to jugX')\n    #pour all water from x jug to y jug\n    elif(x==10):\n            if self.x+self.y < self.capY:\n                self.x=0\n                self.y=self.x+self.y     \n                print('Pour all from jugX to jugY')\n\n    w.printVolume()\n    print('---')\n    self.appendPath()\n  `,\n  water_jug_solution: `\n  w = WaterJug(5,3,4)\n  w.solve()\n  \n  OUTPUT:\n    With JugXCapacity 5 and JugYCapacity 3\n\n\n    [JugX=0, JugY=0]\n    Rule 2 Fill jugY completely\n    [JugX=0, JugY=3]\n    ---\n    [JugX=0, JugY=3]\n    Rule 9 Pour all from jugY to jugX\n    [JugX=3, JugY=0]\n    ---\n    [JugX=3, JugY=0]\n    Rule 2 Fill jugY completely\n    [JugX=3, JugY=3]\n    ---\n    [JugX=3, JugY=3]\n    Rule 7 Pour from jugY to fill jugX\n    [JugX=5, JugY=1]\n    ---\n    [JugX=5, JugY=1]\n    Rule 5 Empty jugX\n    [JugX=0, JugY=1]\n    ---\n    [JugX=0, JugY=1]\n    Rule 9 Pour all from jugY to jugX\n    [JugX=1, JugY=0]\n    ---\n    [JugX=1, JugY=0]\n    Rule 2 Fill jugY completely\n    [JugX=1, JugY=3]\n    ---\n    [JugX=1, JugY=3]\n    Rule 9 Pour all from jugY to jugX\n    [JugX=4, JugY=0]\n    ---\n    Total steps to solve : 8\n\n    [JugX:0, JugY:3]-> [JugX:3, JugY:0]-> [JugX:3, JugY:3]-> [JugX:5, JugY:1]->\n    [JugX:0, JugY:1]-> [JugX:1, JugY:0]-> [JugX:1, JugY:3]-> [JugX:4, JugY:0]\n    *****************************************************\n    With JugXCapacity 5 and JugYCapacity 3\n\n\n    [JugX=0, JugY=0]\n    Rule 2 Fill jugY completely\n    [JugX=0, JugY=5]\n    ---\n    [JugX=0, JugY=5]\n    Rule 7 Pour from jugY to fill jugX\n    [JugX=3, JugY=2]\n    ---\n    [JugX=3, JugY=2]\n    Rule 5 Empty jugX\n    [JugX=0, JugY=2]\n    ---\n    [JugX=0, JugY=2]\n    Rule 9 Pour all from jugY to jugX\n    [JugX=2, JugY=0]\n    ---\n    [JugX=2, JugY=0]\n    Rule 2 Fill jugY completely\n    [JugX=2, JugY=5]\n    ---\n    [JugX=2, JugY=5]\n    Rule 7 Pour from jugY to fill jugX\n    [JugX=3, JugY=4]\n    ---\n    Total steps to solve : 6\n\n    [JugX:0, JugY:5]->[JugX:3, JugY:2]->[JugX:0, JugY:2]\n    ->[JugX:2, JugY:0]->[JugX:2, JugY:5]->[JugX:3, JugY:4]\n\n  `,\n  a_star_search_grid_generation: `\n  const generateGrid = (numbeOfRows, numberOfColumns, value) => {\n    return range(numbeOfRows).map((x) =>\n      range(numberOfColumns).map((y) => ({\n        ...value,\n        x,\n        y,\n      }))\n    );\n  };\n  `,\n  a_star_search_coord_and_distance: `\n  const coordinatesToCheck = [\n    { y: 0, x: -1 },\n    { y: 1, x: -1 },\n    { y: 1, x: 0 },\n    { y: 1, x: 1 },\n    { y: 0, x: 1 },\n    { y: -1, x: 1 },\n    { y: -1, x: 0 },\n    { y: -1, x: -1 },\n  ];\n  \n  const getDistance = (a, b) => {\n    const colOffset = Math.abs(a.y - b.y);\n    const rowOffset = Math.abs(a.x - b.x);\n    const numberOfStraightSegments = Math.abs(colOffset - rowOffset);\n    const numberOfDiagonalSegments =\n      Math.max(colOffset, rowOffset) - numberOfStraightSegments;\n  \n    return numberOfStraightSegments * 10 + numberOfDiagonalSegments * 14; // 14 ~ 10 * sqrt(2)\n  };  \n  `,\n\n  a_star_search_path_calculation: `  \n  export const computePath = (mainGrid, start, end) => {\n    const gridLength = mainGrid.length;\n\n    let counter = 0;\n    let openList = [];\n    const grid = generateGrid(gridLength, gridLength, {\n      fCost: 0,\n      gCost: 0,\n      hCost: 0,\n      parent: undefined,\n      isClosed: false,\n      isPath: false,\n      counter: 0,\n      x: 0,\n      y: 0,\n    });\n    openList.push(grid[start.x][start.y]);\n\n    while (openList.length > 0) {\n      const currentCell = minBy(openList, (c) => c.fCost);\n\n      if (!currentCell) {\n        // no path found\n        return grid;\n      }\n\n      if (currentCell.x === end.x && currentCell.y === end.y) {\n        let curr = currentCell;\n\n        while (curr.parent) {\n          grid[curr.x][curr.y].isPath = true;\n          curr = curr.parent;\n        }\n\n        return grid;\n      }\n\n      remove(openList, (c) => c.x === currentCell.x && c.y === currentCell.y);\n      currentCell.isClosed = true;\n      // eslint-disable-next-line no-loop-func\n      coordinatesToCheck.forEach((coordinatesToCheck) => {\n        const { x, y } = {\n          x: currentCell.x + coordinatesToCheck.x,\n          y: currentCell.y + coordinatesToCheck.y,\n        };\n\n        if (\n          x < 0 ||\n          x >= gridLength ||\n          y < 0 ||\n          y >= gridLength ||\n          (start.x === x && start.y === y) ||\n          grid[x][y].isClosed ||\n          mainGrid[x][y].status === \"blocked\"\n        ) {\n          return;\n        }\n\n        const neighbourCell = grid[x][y];\n\n        const gCost = currentCell.gCost + getDistance(currentCell, neighbourCell);\n        let gCostIsBest = false;\n\n        if (!openList.find((c) => c.x === x && c.y === y)) {\n          gCostIsBest = true;\n          neighbourCell.hCost = getDistance(neighbourCell, end);\n          openList.push(neighbourCell);\n        } else if (gCost < neighbourCell.gCost) {\n          gCostIsBest = true;\n        }\n\n        if (gCostIsBest) {\n          neighbourCell.parent = currentCell;\n          neighbourCell.gCost = gCost;\n          neighbourCell.fCost = neighbourCell.gCost + neighbourCell.hCost;\n          counter = counter + 1;\n          neighbourCell.counter = counter;\n        }\n      });\n    }\n    // No path found\n    return grid;\n  };\n  `,\n  chatbot: `\n  import natural from \"natural\";\n\n  class Chatbot {  \n    constructor(name = \"Agent\") {\n      this.name = name;\n      this.questions = {};\n    }\n  \n    addQuestionsAnswer = (questions, answer) => {\n      let question;\n      for (question of questions) {\n        this.questions[question] = answer;\n      }\n    };\n  \n    //  stem words (fast but abstract words)\n    stemSentence = (sentence) => {\n      return natural.PorterStemmer.tokenizeAndStem(sentence);\n    };\n  \n    ask = (question) => {\n      question = question.toLowerCase().trim();\n      const questionWordList = this.stemSentence(question);\n      let index = 0;\n      let match = [];\n      //console.log(questionWordList);\n      let ques;\n      for (ques of Object.keys(this.questions)) {\n        ques = ques.toLowerCase().trim();\n        //console.log(ques);\n        const quesWordList = this.stemSentence(ques);\n        // console.log(quesWordList);\n        match.push(0);\n        let count = 0;\n        let word;\n        for (word of quesWordList) {\n          count += 1;\n          if (questionWordList.includes(word)) {\n            match[index] += 1;\n          }\n        }\n        match[index] = match[index] / Math.max(count, 1);\n        index += 1;\n        //  console.log(ques)\n        //  console.log(question)\n        // if (ques.toLowerCase().trim() === question) {\n        //   console.log(match);\n  \n        //   console.log(match.index(match.max));\n        //   return this.questions[ques];\n        // }\n      }\n      console.log(match);\n      const max = Math.max(...match);\n      console.log(max);\n      if (max >= 0.3) {\n        //  [match.index(max(match))]\n        const bestQuestionMatch = Object.keys(this.questions)[match.indexOf(max)];\n        return this.questions[bestQuestionMatch];\n      }\n      return \"I did not understand the question!\";\n    };\n  \n    listQuestions = () => {\n      var question;\n      let questionList = [];\n      for (question of Object.keys(this.questions)) {\n        // console.log(question);\n        questionList.push(question);\n      }\n      // console.log(questionList);\n      return questionList;\n    };\n  \n    initiateChat = () => {\n      // console.log(\"Chat with {this.name}\");\n      // console.log(\"Availabe questions for {this.name}\");\n      this.listQuestions();\n  \n      while (1) {\n        //var question = prompt(\"Enter question for {this.name} \\n\");\n        const question = \"Hi\";\n        if (\n          [\n            \"quit\",\n            \"exit\",\n            \"close\",\n            \"stop\",\n            \"end\",\n            \".\",\n            \"annihilate\",\n            \"disconnect\",\n          ].includes(question)\n        ) {\n          break;\n        }\n        // console.log(\"{this.ask(question)}\");\n      }\n    };\n  }   \n  `,\n  chatbot_stem: `\n  //  stem words (fast but abstract words)\n  stemSentence = (sentence) => {\n    return natural.PorterStemmer.tokenizeAndStem(sentence);\n  };\n  `,\n  chatbot_ask: `\n  ask = (question) => {\n    question = question.toLowerCase().trim();\n    const questionWordList = this.stemSentence(question);\n    let index = 0;\n    let match = [];\n    //console.log(questionWordList);\n    let ques;\n    for (ques of Object.keys(this.questions)) {\n      ques = ques.toLowerCase().trim();\n      //console.log(ques);\n      const quesWordList = this.stemSentence(ques);\n      // console.log(quesWordList);\n      match.push(0);\n      let count = 0;\n      let word;\n      for (word of quesWordList) {\n        count += 1;\n        if (questionWordList.includes(word)) {\n          match[index] += 1;\n        }\n      }\n      match[index] = match[index] / Math.max(count, 1);\n      index += 1;\n      //  console.log(ques)\n      //  console.log(question)\n      // if (ques.toLowerCase().trim() === question) {\n      //   console.log(match);\n\n      //   console.log(match.index(match.max));\n      //   return this.questions[ques];\n      // }\n    }\n    console.log(match);\n    const max = Math.max(...match);\n    console.log(max);\n    if (max >= 0.3) {\n      //  [match.index(max(match))]\n      const bestQuestionMatch = Object.keys(this.questions)[match.indexOf(max)];\n      return this.questions[bestQuestionMatch];\n    }\n    return \"I did not understand the question!\";\n  };\n  `,\n};\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Card,\n  CardContent,\n  Link,\n  CardHeader,\n} from \"@material-ui/core\";\nimport GraphComponent from \"../../features/graph/Graph\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport { snippets } from \"../../snippets\";\n\nconst snip = `   A dictionary/object is used to store list of its children to maintain relation between each node and its childrens. i.e  {'parentNode': [children]}.\nTo add node, either children are added to existing parent key or a new parent key is created to store children for that node. \nA function addEdge(node, newNode) takes two input 'node'i.e. parent Node and 'newNode'i.e. to be added child node.\n`;\nconst Lab2 = () => {\n  const tabNameList = [\"BFS\", \"DFS\", \"Graph Class\"];\n  const tabCodeSnippetList = [snippets.bfs, snippets.dfs, snippets.graphClass];\n  // console.log(g.graph);\n  return (\n    <Grid item container direction=\"column\" spacing={2}>\n      <Grid item>\n        <Card>\n          <CardHeader title=\"DFS and BFS\" />\n          <CardContent>\n            <Typography variant=\"body1\">\n              Each node can be selected. A green highlight is around currently\n              selected node.\n            </Typography>\n            <Typography variant=\"body1\">\n              'Add node' adds child node to the currently selected node.\n            </Typography>\n            <Typography variant=\"body1\">\n              Show DFS and Show BFS calculates path from currently selected node\n              to all its leaf nodes.\n            </Typography>\n            <Typography variant=\"body1\">\n              Two Nodes cannot have the same name.\n            </Typography>\n            <Typography variant=\"body2\">\n              *Capable of displaying Tree of Depth 6 nodes with each node having\n              2 children on a full screen\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item container>\n        <GraphComponent />\n      </Grid>\n      <Grid item xs={12}>\n        <CodeBlock\n          tabNameList={tabNameList}\n          tabCodeSnippetList={tabCodeSnippetList}\n          language=\"javascript\"\n        />\n      </Grid>\n      <Grid item>\n        <Card>\n          <CardHeader title=\"Adding Node\" />\n          <CardContent>\n            <Typography>{snip}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card>\n          <CardHeader title=\"Github Link\" />\n          <CardContent>\n            <Link\n              color=\"secondary\"\n              variant=\"body2\"\n              href=\"https://github.com/B10prajapati/AI_LAB\"\n            >\n              {\"Github Link\"}\n            </Link>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\nexport default Lab2;\n","import React, { forwardRef, useEffect, useState } from \"react\";\nimport { TweenMax } from \"gsap\";\nimport { Linear } from \"gsap/gsap-core\";\nimport { useImperativeHandle } from \"react\";\n\nconst WaterjugComponent = forwardRef((props, ref) => {\n  const { id, capacity = 3, height = 160, width = 160 } = props;\n\n  const [waterVolume, setWaterVolume] = useState(0);\n  const [emptyWaterVolume, setEmptyWaterVolume] = useState(capacity);\n  const [toggle, setToggle] = useState(0);\n  const [toggleRender, setToggleRender] = useState(false);\n  const [waterLevel, setWaterLevel] = useState(0);\n  const [temporaryLevel, setTemporaryLevel] = useState(0);\n  useImperativeHandle(ref, () => ({\n    fill(x) {\n      console.log(\"Fill\");\n      setWaterVolume(x);\n    },\n    drop(x) {\n      console.log(\"empty\");\n      setEmptyWaterVolume(x);\n    },\n    toggleButton(x) {\n      setToggle(x);\n      setToggleRender(!toggleRender);\n    },\n    empty() {\n      setToggleRender(!toggleRender);\n      setToggle(2);\n      setEmptyWaterVolume(temporaryLevel);\n    },\n  }));\n\n  useEffect(() => {\n    if (toggle === 1) {\n      console.log(\"IN RISE id \" + id);\n      console.log(waterLevel, waterVolume);\n      const rise = waterLevel + waterVolume;\n\n      setWaterLevel(rise);\n      const waterRatio = (temporaryLevel + waterVolume) / capacity;\n      const previousRatio = temporaryLevel / capacity;\n      setTemporaryLevel(rise);\n      // \"Wave\" animation\n      TweenMax.fromTo(\n        \".water-fill\" + id,\n        0.8,\n        {\n          attr: {\n            x: -400,\n          },\n        },\n        {\n          attr: {\n            x: 0,\n          },\n          repeat: -1,\n          ease: Linear.easeNone,\n        }\n      );\n\n      // \"Fill up\" animation\n      TweenMax.fromTo(\n        \".water-fill\" + id,\n        3,\n        {\n          attr: {\n            y: 378 - 378 * previousRatio,\n            height: 440 * previousRatio,\n          },\n        },\n        {\n          attr: {\n            y: 378 - 378 * waterRatio,\n            height: 440 * waterRatio,\n          },\n          ease: Linear.easeNone,\n        }\n      );\n    } else if (toggle === 2) {\n      console.log(\"IN DROP id \" + id);\n      console.log(waterLevel, emptyWaterVolume);\n      const drop = waterLevel - emptyWaterVolume;\n      setWaterLevel(drop);\n\n      const previousRatio = temporaryLevel / capacity;\n      const emptyWaterRatio = (temporaryLevel - emptyWaterVolume) / capacity;\n      setTemporaryLevel(drop);\n      // \"Wave\" animation\n      TweenMax.fromTo(\n        \".water-fill\" + id,\n        0.8,\n        {\n          attr: {\n            x: -400,\n          },\n        },\n        {\n          attr: {\n            x: 0,\n          },\n          repeat: -1,\n          ease: Linear.easeNone,\n        }\n      );\n\n      // \"Drop water\" animation\n      TweenMax.fromTo(\n        \".water-fill\" + id,\n        3,\n        {\n          attr: {\n            y: 378 - 378 * previousRatio,\n            height: 440 * previousRatio,\n          },\n        },\n        {\n          attr: {\n            y: 378 - 378 * emptyWaterRatio,\n            height: 440 * emptyWaterRatio,\n          },\n          ease: Linear.easeNone,\n        }\n      );\n    }\n  }, [toggleRender]);\n\n  return (\n    <>\n      <svg\n        id=\"Layer_1\"\n        height={height}\n        width={width}\n        data-name=\"Layer 1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 378 378\"\n      >\n        <defs>\n          <pattern\n            id=\"water\"\n            width=\".25\"\n            height=\"1.1\"\n            patternContentUnits=\"objectBoundingBox\"\n          >\n            <path\n              fill=\"#4A90E2\"\n              d=\"M0.25,1H0c0,0,0-0.659,0-0.916c0.083-0.303,0.158,0.334,0.25,0C0.25,0.327,0.25,1,0.25,1z\"\n            />\n          </pattern>\n\n          <g id=\"text\">\n            <circle cx=\"50%\" cy=\"50%\" r=\"50%\" />\n          </g>\n\n          <mask id=\"text-mask\">\n            <use x=\"0\" y=\"0\" href=\"#text\" opacity=\"1\" fill=\"#ffffff\" />\n          </mask>\n        </defs>\n\n        <use x=\"0\" y=\"0\" href=\"#text\" fill=\"#222\" />\n\n        <rect\n          className={\"water-fill\" + id}\n          mask=\"url(#text-mask)\"\n          fill=\"url(#water)\"\n          x=\"400\"\n          y=\"0\"\n          width=\"1600\"\n          height=\"100%\"\n        />\n        <text x=\"25%\" y=\"50%\" fill=\"white\" fontSize=\"5em\">\n          {`${waterLevel}L/${capacity}L`}\n        </text>\n      </svg>\n    </>\n  );\n});\n\nexport default WaterjugComponent;\n","import {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Waterjug from \"./Waterjug\";\nimport {\n  addCapacityX,\n  addCapacityY,\n  addTarget,\n  computePath,\n  selectCapacityX,\n  selectCapacityY,\n  selectPath,\n  reset,\n} from \"./waterjugSlice\";\n\nconst WaterjugComponent = () => {\n  const capX = useSelector(selectCapacityX);\n  const capY = useSelector(selectCapacityY);\n  const path = useSelector(selectPath);\n  const refX = useRef(null);\n  const refY = useRef(null);\n\n  const [capacityX, setCapacityX] = useState(0);\n  const [capacityY, setCapacityY] = useState(0);\n\n  const [jugX, setJugX] = useState(0);\n  const [jugY, setJugY] = useState(0);\n  const [prevJugX, setPrevJugX] = useState(0);\n  const [prevJugY, setPrevJugY] = useState(0);\n\n  const [target, setTarget] = useState(0);\n\n  const [stop, setStop] = useState(true);\n  const dispatch = useDispatch();\n\n  function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n  const waitLoop = async () => {\n    var tempX = 0;\n    var tempY = 0;\n    for (var i of path) {\n      console.log(i);\n      const x = i[0];\n      const y = i[1];\n      setJugX(x);\n      setJugY(y);\n      setPrevJugX(tempX);\n      setPrevJugY(tempY);\n      console.log(x, y);\n      console.log(tempX, tempY);\n      if (x > tempX) {\n        refX.current.fill(x - tempX);\n        refX.current.toggleButton(1);\n      } else if (x < tempX) {\n        refX.current.drop(tempX - x);\n        refX.current.toggleButton(2);\n      }\n      // await sleep(3000);\n      if (y > tempY) {\n        refY.current.fill(y - tempY);\n        refY.current.toggleButton(1);\n      } else if (y < tempY) {\n        refY.current.drop(tempY - y);\n        refY.current.toggleButton(2);\n      }\n\n      tempX = x;\n      tempY = y;\n      await sleep(5000);\n    }\n  };\n  useEffect(() => {\n    if (refX.current !== null && refY.current !== null) {\n      if (path.length === 0) {\n        console.log(\"empty\");\n        refX.current.empty();\n        refY.current.empty();\n      } else {\n        try {\n          waitLoop();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  }, [path]);\n\n  const handleSubmit = (functionArguement, parameters) => {\n    dispatch(functionArguement(parameters));\n  };\n  return (\n    <Card>\n      <CardContent>\n        <Grid\n          container\n          xl={12}\n          spacing={4}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            container\n            xs={12}\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Card>\n              <CardContent>\n                <Grid\n                  item\n                  container\n                  xs={12}\n                  spacing={2}\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Grid xs={12} sm={6} item container direction=\"column\">\n                    <Grid item>\n                      <Waterjug\n                        id={1}\n                        height=\"200\"\n                        width=\"200\"\n                        ref={refX}\n                        capacity={capX}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => {\n                          refX.current.fill(2);\n                          refX.current.toggleButton(1);\n                        }}\n                      >\n                        Fill 2L\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => {\n                          refX.current.drop(2);\n                          refX.current.toggleButton(2);\n                        }}\n                      >\n                        Drop 2L\n                      </Button>\n                    </Grid>\n                  </Grid>\n                  <Grid xs={12} sm={6} item container direction=\"column\">\n                    <Grid item>\n                      <Waterjug\n                        id={2}\n                        height=\"200\"\n                        width=\"200\"\n                        ref={refY}\n                        capacity={capY}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => {\n                          refY.current.fill(2);\n                          refY.current.toggleButton(1);\n                        }}\n                      >\n                        Fill 2L\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => {\n                          refY.current.drop(2);\n                          refY.current.toggleButton(2);\n                        }}\n                      >\n                        Drop 2L\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            container\n            spacing={4}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <TextField\n                label=\"Capacity For JUG X\"\n                plaardceholder=\"X Litre\"\n                variant=\"outlined\"\n                aria-label=\"Capacity Fot jug X\"\n                value={capacityX}\n                type=\"number\"\n                onChange={(e) => setCapacityX(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\")\n                    handleSubmit(addCapacityX, {\n                      capacityX: parseInt(capacityX),\n                    });\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Capacity For JUG Y\"\n                plaardceholder=\"Y Litre\"\n                variant=\"outlined\"\n                aria-label=\"Capacity Fot jug Y\"\n                value={capacityY}\n                type=\"number\"\n                onChange={(e) => setCapacityY(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\")\n                    handleSubmit(addCapacityY, {\n                      capacityY: parseInt(capacityY),\n                    });\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Target\"\n                plaardceholder=\"X Litre\"\n                variant=\"outlined\"\n                aria-label=\"Target\"\n                value={target}\n                type=\"number\"\n                onChange={(e) => setTarget(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\")\n                    handleSubmit(addTarget, { target: parseInt(target) });\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            container\n            spacing={2}\n            xs={12}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  dispatch(reset());\n                  dispatch(computePath());\n                }}\n              >\n                Compute Path\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  dispatch(reset());\n                }}\n              >\n                Reset\n              </Button>\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            container\n            xs={12}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            {path.length > 0 ? (\n              <>\n                <Grid item xs={6}>\n                  <Typography align=\"center\">Current Transfer</Typography>\n                  <Typography align=\"center\">{`In JugX: ${prevJugX} -> ${jugX}`}</Typography>\n                  <Typography align=\"center\">{`In JugY: ${prevJugY} -> ${jugY}`}</Typography>\n                </Grid>\n              </>\n            ) : null}\n\n            <Grid\n              item\n              container\n              spacing={2}\n              xs={6}\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography>Steps Involved</Typography>\n              </Grid>\n              {path.length > 0\n                ? path.map((value, index) => {\n                    return (\n                      <Grid item key={index}>\n                        <Typography>{`JugX: ${value[0]}L, JugY:${value[1]}L`}</Typography>\n                      </Grid>\n                    );\n                  })\n                : null}\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\nexport default WaterjugComponent;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport CodeBlock from \"../../components/CodeBlock\";\nimport { snippets } from \"../../snippets\";\nimport WaterjugComponent from \"../../features/waterjug/WaterjugComponent\";\n\nconst Lab3 = () => {\n  const tabNameList = [\"Solved Examples\", \"Rules\", \"Solution\", \"Class\"];\n  const tabCodeSnippetList = [\n    snippets.water_jug_solution,\n    snippets.water_jug_rules,\n    snippets.water_jug_pour_rule,\n    snippets.water_jug,\n  ];\n\n  return (\n    <Grid item container direction=\"column\" spacing={2}>\n      <Grid item>\n        <WaterjugComponent />\n      </Grid>\n\n      <Grid item xs={12} sm={12}>\n        <CodeBlock\n          tabNameList={tabNameList}\n          tabCodeSnippetList={tabCodeSnippetList}\n          language=\"javascript\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport default Lab3;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport { withRouter } from \"react-router\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  AccountTreeOutlined,\n  FilterListOutlined,\n  InfoOutlined,\n  MessageOutlined,\n  SearchOutlined,\n} from \"@material-ui/icons\";\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles({\n  root: {\n    flex: 1,\n  },\n});\n\nconst ListRouter = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0}>\n        <List aria-label=\"secondary mailbox folders\">\n          <ListItem>\n            <ListItemText primary=\"Lab Works\" />\n          </ListItem>\n          <Divider />\n          <ListItemLink\n            to=\"/AI_LAB/lab2\"\n            primary=\"Lab 2\"\n            icon={<AccountTreeOutlined />}\n          />\n          <ListItemLink\n            to=\"/AI_LAB/lab3\"\n            primary=\"Lab 3\"\n            icon={<FilterListOutlined />}\n          />\n          <ListItemLink\n            to=\"/AI_LAB/lab4\"\n            primary=\"Lab 4\"\n            icon={<SearchOutlined />}\n          />\n          <ListItemLink\n            to=\"/AI_LAB/lab5\"\n            primary=\"Lab 5\"\n            icon={<MessageOutlined />}\n          />\n        </List>\n\n        <Divider />\n        <List aria-label=\"main mailbox folders\">\n          <ListItemLink\n            to=\"/AI_LAB/lab2\"\n            primary=\"Contact\"\n            icon={<InboxIcon />}\n          />\n          <ListItemLink\n            to=\"/AI_LAB/lab3\"\n            primary=\"About\"\n            icon={<InfoOutlined />}\n          />\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nexport default withRouter(ListRouter);\n","import {\n  Button,\n  Container,\n  Grid,\n  Link,\n  List,\n  ListItem,\n  makeStyles,\n  Modal,\n  Typography,\n} from \"@material-ui/core\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changePreset,\n  selectPreset,\n} from \"../features/aStarSearch/aStarSearchSlice\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\nconst SettingsModal = () => {\n  const [isOpen, setOpen] = useState(false);\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const preset = useSelector(selectPreset);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Button\n        startIcon={<InfoOutlined />}\n        onClick={() => setOpen(true)}\n        style={{ outline: 0 }}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Info\n      </Button>\n      <Modal\n        open={isOpen}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"A Star Pathfinding React Demo\"\n      >\n        <Container style={modalStyle} className={classes.paper}>\n          <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h5\">How does it work ?</Typography>\n            </Grid>\n            <Grid item>\n              <List>\n                <ListItem>\n                  <Typography>Press start to compute the path</Typography>\n                </ListItem>\n                <ListItem>\n                  <Typography>\n                    Hover over the cells to see more details about the result\n                  </Typography>\n                </ListItem>\n                <ListItem>\n                  <Typography>\n                    Use the set start/end and draw button to change the\n                    obstacles\n                  </Typography>\n                </ListItem>\n              </List>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h5\">Change Pattern</Typography>\n            </Grid>\n            <Grid item container spacing={2}>\n              {[\n                { preset: \"a-star-text\", text: \"A-Star Text\" },\n                { preset: \"labyrinth\", text: \"Labyrinth\" },\n                { preset: \"random\", text: \"Random\" },\n                { preset: \"blank\", text: \"Blank Canvas\" },\n              ].map((item) => (\n                <Grid item key={item.preset}>\n                  <Button\n                    variant=\"contained\"\n                    disabled={preset === item.preset}\n                    onClick={() =>\n                      dispatch(changePreset({ preset: item.preset }))\n                    }\n                    style={{ outline: 0 }}\n                  >\n                    {item.text}\n                  </Button>\n                </Grid>\n              ))}\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h5\">Ressources I found useful</Typography>\n            </Grid>\n            <Grid item>\n              <List>\n                <ListItem button>\n                  <Link\n                    color=\"secondary\"\n                    variant=\"body2\"\n                    href=\"https://www.youtube.com/watch?v=-L-WgKMFuhE\"\n                  >\n                    Sebastian Lague's Youtube Video\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link\n                    color=\"secondary\"\n                    variant=\"body2\"\n                    href=\"https://briangrinstead.com/blog/astar-search-algorithm-in-javascript-updated/\"\n                  >\n                    Brian Grinstead's blog article on A* implementation and\n                    optimization.\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link\n                    color=\"secondary\"\n                    variant=\"body2\"\n                    href=\"http://www.codeblocq.com/2020/01/A-Star-Pathfinding-React-Demo/\"\n                  >\n                    Jonathan Klughertz's blog on implementation of a* in react.\n                    Design and code concept from the blog demo.\n                  </Link>\n                </ListItem>\n              </List>\n            </Grid>\n          </Grid>\n        </Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default SettingsModal;\n","import React from \"react\";\n\nimport SettingsModal from \"./SettingsModal\";\n\nimport { Button, Grid } from \"@material-ui/core\";\nimport {\n  ClearAllOutlined,\n  PlayArrowOutlined,\n  StopOutlined,\n} from \"@material-ui/icons\";\nimport {\n  calculatePath,\n  clearGrid,\n  selectMode,\n  setMode,\n} from \"../features/aStarSearch/aStarSearchSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Mode } from \"../features/aStarSearch/constants\";\n\nconst Controls = () => {\n  const mode = useSelector(selectMode);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<StopOutlined />}\n          disabled={mode === Mode.setStart}\n          onClick={() =>\n            dispatch(\n              setMode({\n                mode: mode === Mode.setStart ? Mode.draw : Mode.setStart,\n              })\n            )\n          }\n          style={{ outline: 0 }}\n        >\n          SET START\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          startIcon={<StopOutlined />}\n          disabled={mode === Mode.setEnd}\n          onClick={() =>\n            dispatch(\n              setMode({ mode: mode === Mode.setEnd ? Mode.draw : Mode.setEnd })\n            )\n          }\n          style={{ outline: 0 }}\n        >\n          SET END\n        </Button>\n      </Grid>\n\n      <Grid item>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          startIcon={<StopOutlined />}\n          disabled={mode === Mode.draw}\n          onClick={() => dispatch(setMode({ mode: Mode.draw }))}\n          style={{ outline: 0 }}\n        >\n          DRAW\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          startIcon={<PlayArrowOutlined />}\n          onClick={() => dispatch(calculatePath())}\n          style={{ outline: 0 }}\n        >\n          START\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          startIcon={<ClearAllOutlined />}\n          onClick={() => dispatch(clearGrid())}\n          style={{ outline: 0 }}\n        >\n          RESET\n        </Button>\n      </Grid>\n\n      <Grid item>\n        <SettingsModal />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nconst {\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n  TableContainer,\n  Paper,\n} = require(\"@material-ui/core\");\n\nconst getLabel = (cell) => {\n  if (cell.isPath) {\n    return \"Optimal Path\";\n  } else if (cell.isClosed) {\n    return \"Considered for the optimal path\";\n  } else {\n    return \"Computed but never considered\";\n  }\n};\nconst TooltipContent = ({ cell }) => {\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <Typography>{getLabel(cell)}</Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>\n                <Typography>Distance from Start</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>{cell.gCost}</Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>\n                <Typography>Distance from End</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>{cell.hCost}</Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>\n                <Typography>Sum of the Two</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>{cell.fCost}</Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>\n                <Typography>Steps to reach</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>{cell.counter}</Typography>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default TooltipContent;\n","import { Tooltip } from \"@material-ui/core\";\n\nimport React from \"react\";\nimport TooltipContent from \"./TooltipContent\";\n\nimport cn from \"classnames\";\nimport styles from \"./Grid.module.css\";\n\nconst GridCell = (props) => {\n  const { cell, rowIndex, colIndex, start, end, path, onCellClick } = props;\n  const isClosed = path && path[rowIndex][colIndex]?.isClosed;\n  const isPath = path && path[rowIndex][colIndex]?.isPath;\n  const isChecked = path && path[rowIndex][colIndex]?.fCost !== 0;\n  const animationOffset = path ? path[rowIndex][colIndex]?.counter : 0;\n\n  return (\n    <>\n      <td\n        className={cn(\n          styles.gridCell,\n          styles[cell.status],\n          { [styles.start]: rowIndex === start.x && colIndex === start.y },\n          { [styles.end]: rowIndex === end.x && colIndex === end.y },\n          { [styles.closed]: isClosed },\n          { [styles.checked]: isChecked },\n          { [styles.path]: isPath }\n        )}\n        key={`${rowIndex}-${colIndex}`}\n        onClick={onCellClick(rowIndex, colIndex)}\n        style={{\n          animationDelay: animationOffset\n            ? `${animationOffset * 10}ms`\n            : undefined,\n        }}\n      >\n        {path && (isClosed || isChecked || isPath) ? (\n          <Tooltip title={<TooltipContent cell={path[rowIndex][colIndex]} />}>\n            <div\n              className={styles.gridTooltip}\n              style={{ color: \"transparent\" }}\n            />\n          </Tooltip>\n        ) : null}\n      </td>\n    </>\n  );\n};\nexport default React.memo(GridCell);\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectEnd,\n  selectGrid,\n  selectMode,\n  selectPath,\n  selectStart,\n  setCellAsBlocked,\n  setEnd,\n  setStart,\n} from \"../features/aStarSearch/aStarSearchSlice\";\nimport { Mode } from \"../features/aStarSearch/constants\";\nimport GridCell from \"./GridCell\";\nimport styles from \"./Grid.module.css\";\nconst SearchGrid = (props) => {\n  const grid = useSelector(selectGrid);\n  const end = useSelector(selectEnd);\n  const path = useSelector(selectPath);\n  const start = useSelector(selectStart);\n  const mode = useSelector(selectMode);\n\n  const dispatch = useDispatch();\n\n  const [isPressed, setIsPressed] = useState(false);\n  const onMouseDown = () => setIsPressed(true);\n  const onMouseUp = () => setIsPressed(false);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", onMouseDown);\n    document.addEventListener(\"mouseup\", onMouseUp);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", onMouseDown);\n      document.removeEventListener(\"mouseUp\", onMouseUp);\n    };\n  }, []);\n\n  const onCellClick = (rowIndex, colIndex) => () => {\n    console.log(rowIndex, colIndex);\n    if (mode === Mode.draw) {\n      dispatch(setCellAsBlocked({ x: rowIndex, y: colIndex }));\n    } else if (mode === Mode.setStart) {\n      dispatch(setStart({ x: rowIndex, y: colIndex }));\n    } else if (mode === Mode.setEnd) {\n      dispatch(setEnd({ x: rowIndex, y: colIndex }));\n    }\n  };\n\n  return (\n    <div className={styles.gridRoot}>\n      <table className={styles.gridTable}>\n        <tbody>\n          {grid.map((row, rowIndex) => (\n            <tr key={rowIndex} style={{ border: \"1px solid black\" }}>\n              {row.map((cell, colIndex) => (\n                <GridCell\n                  {...{\n                    key: `${rowIndex} - ${colIndex}`,\n                    cell,\n                    rowIndex,\n                    colIndex,\n                    start,\n                    end,\n                    path,\n                    isPressed,\n                    onCellClick: onCellClick,\n                  }}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default SearchGrid;\n","import { Card, CardContent, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport Controls from \"../../components/Controls\";\nimport SearchGrid from \"../../components/SearchGrid\";\n\nconst AStarSearchComponent = () => {\n  return (\n    <Card>\n      <CardContent>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Controls />\n          </Grid>\n          <Grid item>\n            <SearchGrid />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AStarSearchComponent;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport AStarSearchComponent from \"../../features/aStarSearch/AStarSearch\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport { snippets } from \"../../snippets\";\n\nconst Lab3 = () => {\n  const tabNameList = [\"Grid Generation\", \"Cost\", \"Path Calculation\"];\n  const tabCodeSnippetList = [\n    snippets.a_star_search_grid_generation,\n    snippets.a_star_search_coord_and_distance,\n    snippets.a_star_search_path_calculation,\n  ];\n\n  return (\n    <Grid item container direction=\"column\" spacing={2}>\n      <Grid item>\n        <AStarSearchComponent />\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <CodeBlock\n          tabNameList={tabNameList}\n          tabCodeSnippetList={tabCodeSnippetList}\n          language=\"javascript\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport default Lab3;\n","import {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Chatbot from \"./ChatbotClass\";\nimport { addAnswer, addQuestion, selectMessageHistory } from \"./chatbotSlice\";\n\nconst c = new Chatbot();\n\nconst addAllQuestions = () => {\n  c.addQuestionsAnswer(\n    [\"Hello\", \"Hi\", \"Hey\"],\n    \"Hi! Welcome to Khwopa Q&A. How Can I Help You?\"\n  );\n\n  c.addQuestionsAnswer(\n    [\"Are KhEC & KhCE same?\"],\n    \"No, Khwopa College of Engineering (KhCE) is affiliated to Tribhuvan University and Khwopa Engineering College (KhEC) is affiliated to Purbanchal University.\"\n  );\n\n  c.addQuestionsAnswer(\n    [\"Can a student be awarded with more than one scholarship?\"],\n    \"No. But, the candidate can choose the better one for him/her. \"\n  );\n  c.addQuestionsAnswer(\n    [\"Is there hostel facility in college?\"],\n    \"No, there is not such facility. But there are several private hostels nearby.\"\n  );\n  c.addQuestionsAnswer([\"Fee Structure\"], \"\");\n\n  c.addQuestionsAnswer(\n    [\"Does the college conduct any career based counselling programs?\"],\n    \"Yes, counselling programs are conducted from time to time. Experienced professionals in the respective fields are invited for their valuable suggestions and sharing their working experiences with the students.\"\n  );\n  c.addQuestionsAnswer(\n    [\n      \"How are students involved in the practical field of their respective courses\",\n    ],\n    \"College organizes different expos and exhibition at certain intervals for improving students' practical skills in their fields. Students also get involved and participate in different competitions organized by various organizations of their respective fields.\"\n  );\n  c.addQuestionsAnswer(\n    [\"Can I get extra classes in college?\"],\n    \"Yes, it is possible to get extra classes if requested by students in needy time.\"\n  );\n  c.addQuestionsAnswer(\n    [\"Is parent meeting conducted timely?\"],\n    \"Yes, it is conducted timely on the requirement basis.\"\n  );\n  c.addQuestionsAnswer(\n    [\"When deposit can be refunded?\"],\n    \"Deposits can only be refunded after completing all the four years courses.\"\n  );\n  c.addQuestionsAnswer(\n    [\"Does college provide any scholarship?\"],\n    \"College provides full scholarship for the applicants of each program with minimun 75% in +2 science or I.Sc., or Diploma in engineering and scoring the highest marks in the entrance exam.Scholarship may be granted to economically needy, diligent and disciplined student. On the basis of the marks secured in semester examination, college will provide scholarships of 100%, 50% and 25%.\"\n  );\n  c.addQuestionsAnswer(\n    [\"What extra curriculum activities are conducted in college?\"],\n    \"Various extra curriculur activities and sports competitions are conducted in college like chess, table tennis, badminton and football competition \"\n  );\n  c.addQuestionsAnswer(\n    [\"Is college uniform compulsory?\"],\n    \"Yes, it is compulsory to be in uniform. Students without uniform are not allowed to sit in the class. There is no excuse for not being in uniform.\"\n  );\n  c.addQuestionsAnswer(\n    [\"What is the procedure for interview?\"],\n    \"Some oral exams are conducted in the interview. You might need to solve some written problems depending on your academic performance or the performance during the interview.\"\n  );\n  c.addQuestionsAnswer(\n    [\"What is the fee structure?\"],\n    \"It’s Rs.5,86,500 for Bachelor in Electrical, Rs.5,86,500 for Bachelor in Computer and Rs.6,01,500 for Bachelor in Civil.\"\n  );\n  c.addQuestionsAnswer(\n    [\"Can I get online form facility?\"],\n    \"Yes, you can fill up online form.\"\n  );\n  c.addQuestionsAnswer(\n    [\"What is the admission procedure?\"],\n    \"Student must fill up online entrance form.He/She will be selected according to their rank in IOE exam. After selection he/ she must attend the college interview. After students are approved from interview, Firstly he/she can visit college reception to know about the requirements for admission, fee structures and documents required etc.\"\n  );\n  c.addQuestionsAnswer(\n    [\"What courses are available now?\"],\n    \"Bachelor in  Civil Engineering,\\nBachelor in  Computer Engineering,\\nBachelor in  Electrical Engineering\"\n  );\n  c.addQuestionsAnswer(\n    [\"Why is it important to attend my college classes?\"],\n    \"Aside from the fact that you are paying for it, showing up for class will give you an immediate advantage in learning what your professors think are important, and what is most likely to show up on those final exams. Class is also where you get the chance to meet new people, form study groups, etc.\"\n  );\n};\n\naddAllQuestions();\nconst questionList = c.listQuestions();\n\nconst useStyles = makeStyles((theme) => ({\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n\nconst ChatbotComponent = () => {\n  const classes = useStyles();\n  const [question, setQuestion] = useState(\"\");\n  const messageHistory = useSelector(selectMessageHistory);\n  const dispatch = useDispatch();\n\n  const handleAskQuestion = () => {\n    dispatch(addQuestion({ question: question }));\n\n    dispatch(addAnswer({ answer: c.ask(question) }));\n    setQuestion(\"\");\n  };\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item container>\n        <Grid item container spacing={2}>\n          <Grid item xs={12} lg={6}>\n            <Card>\n              <CardHeader title=\"Questions For Chatbot\" />\n              <CardContent>\n                {questionList.map((question, index) => {\n                  return <Typography key={index}>{question}</Typography>;\n                })}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Card>\n              <CardHeader\n                title=\"ChatBot Messaging\"\n                subheader=\"Chat with Us\"\n                avatar={\n                  <Avatar aria-label=\"messenger\" className={classes.orange}>\n                    C\n                  </Avatar>\n                }\n              />\n              <CardContent>\n                <Grid item container spacing={4} xs={12}>\n                  {messageHistory.map((message, index) => {\n                    return index % 2 !== 0 ? (\n                      <Grid\n                        item\n                        key={index}\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        xs={12}\n                      >\n                        <Grid item xs={2}>\n                          <Avatar className={classes.orange}>C</Avatar>\n                        </Grid>\n                        <Grid item xs={10}>\n                          <Typography align=\"left\">{message}</Typography>\n                        </Grid>\n                      </Grid>\n                    ) : (\n                      <Grid\n                        xs={12}\n                        spacing={2}\n                        item\n                        key={index}\n                        container\n                        direction=\"row\"\n                        justify=\"flex-end\"\n                        alignItems=\"center\"\n                      >\n                        <Grid item xs={10}>\n                          <Typography align=\"right\">{message}</Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                          <Avatar align=\"right\" className={classes.purple}>\n                            U\n                          </Avatar>\n                        </Grid>\n                      </Grid>\n                    );\n                  })}\n                </Grid>\n              </CardContent>\n              <CardActions>\n                <TextField\n                  label=\"Message\"\n                  plaardceholder=\"Enter question\"\n                  variant=\"outlined\"\n                  aria-label=\"Node name\"\n                  value={question}\n                  onChange={(e) => setQuestion(e.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") handleAskQuestion();\n                  }}\n                />\n                <Button variant=\"outlined\" onClick={handleAskQuestion}>\n                  Ask Question\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(ChatbotComponent);\n","import natural from \"natural\";\n\nclass Chatbot {\n  constructor(name = \"Agent\") {\n    this.name = name;\n    this.questions = {};\n  }\n\n  addQuestionsAnswer = (questions, answer) => {\n    let question;\n\n    for (question of questions) {\n      this.questions[question] = answer;\n    }\n  };\n\n  //  stem words (fast but abstract words)\n  stemSentence = (sentence) => {\n    return natural.PorterStemmer.tokenizeAndStem(sentence);\n  };\n\n  ask = (question) => {\n    question = question.toLowerCase().trim();\n    const questionWordList = this.stemSentence(question);\n    let index = 0;\n    let match = [];\n    //console.log(questionWordList);\n\n    let ques;\n    for (ques of Object.keys(this.questions)) {\n      ques = ques.toLowerCase().trim();\n      //console.log(ques);\n      const quesWordList = this.stemSentence(ques);\n      // console.log(quesWordList);\n      match.push(0);\n      let count = 0;\n\n      let word;\n      for (word of quesWordList) {\n        count += 1;\n        if (questionWordList.includes(word)) {\n          match[index] += 1;\n        }\n      }\n      match[index] = match[index] / Math.max(count, 1);\n      index += 1;\n      //  console.log(ques)\n      //  console.log(question)\n      // if (ques.toLowerCase().trim() === question) {\n      //   console.log(match);\n\n      //   console.log(match.index(match.max));\n      //   return this.questions[ques];\n      // }\n    }\n\n    console.log(match);\n    const max = Math.max(...match);\n    console.log(max);\n    if (max >= 0.3) {\n      //  [match.index(max(match))]\n      const bestQuestionMatch = Object.keys(this.questions)[match.indexOf(max)];\n      return this.questions[bestQuestionMatch];\n    }\n\n    return \"I did not understand the question!\";\n  };\n\n  listQuestions = () => {\n    var question;\n    let questionList = [];\n    for (question of Object.keys(this.questions)) {\n      // console.log(question);\n      questionList.push(question);\n    }\n    // console.log(questionList);\n    return questionList;\n  };\n\n  initiateChat = () => {\n    // console.log(\"Chat with {this.name}\");\n    // console.log(\"Availabe questions for {this.name}\");\n    this.listQuestions();\n\n    while (1) {\n      //var question = prompt(\"Enter question for {this.name} \\n\");\n      const question = \"Hi\";\n      if (\n        [\n          \"quit\",\n          \"exit\",\n          \"close\",\n          \"stop\",\n          \"end\",\n          \".\",\n          \"annihilate\",\n          \"disconnect\",\n        ].includes(question)\n      ) {\n        break;\n      }\n\n      // console.log(\"{this.ask(question)}\");\n    }\n  };\n}\n\nexport default Chatbot;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport ChatbotComponent from \"../../features/chatbot/Chatbot\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport { snippets } from \"../../snippets\";\n\nconst Lab5 = () => {\n  const tabNameList = [\"STEM\", \"ASK\", \"ChatBot Class\"];\n  const tabCodeSnippetList = [\n    snippets.chatbot_stem,\n    snippets.chatbot_ask,\n    snippets.chatbot,\n  ];\n\n  return (\n    <Grid item container direction=\"column\" spacing={2}>\n      <Grid item>\n        <ChatbotComponent />\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <CodeBlock\n          tabNameList={tabNameList}\n          tabCodeSnippetList={tabCodeSnippetList}\n          language=\"javascript\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport default Lab5;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Lab2 from \"../lab2/lab2\";\nimport Lab3 from \"../lab3/lab3\";\nimport ListRouter from \"../../components/ListRouter\";\nimport Lab4 from \"../lab4/lab4\";\nimport Lab5 from \"../lab5/lab5\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Responsive drawer\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Router>\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                <ListRouter />\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open={mobileOpen}\n              >\n                <Toolbar />\n                <ListRouter />\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Toolbar />\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item sm={4} lg={2} xl={1}></Grid>\n              <Grid\n                item\n                container\n                sm={8}\n                lg={10}\n                xl={11}\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Switch>\n                  <Route\n                    exact\n                    from=\"/AI_LAB/\"\n                    render={(props) => <Lab2 {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/AI_LAB/lab2\"\n                    render={(props) => <Lab2 {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/AI_LAB/lab3\"\n                    render={(props) => <Lab3 {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/AI_LAB/lab4\"\n                    render={(props) => <Lab4 {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/AI_LAB/lab5\"\n                    render={(props) => <Lab5 {...props} />}\n                  />\n                </Switch>\n              </Grid>\n            </Grid>\n          </main>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","import { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\nimport ClippedDrawer from \"./pages/home/home\";\r\n\r\n// Dark theme\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#26292C\",\r\n      light: \"rgb(81, 91, 95)\",\r\n      dark: \"rgb(26, 35, 39)\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      main: \"#FFB74D\",\r\n      light: \"rgb(255, 197, 112)\",\r\n      dark: \"rgb(200, 147, 89)\",\r\n      contrastText: \"rgba(0, 0, 0, 0.87)\",\r\n    },\r\n    titleBar: {\r\n      main: \"#555555\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n  },\r\n});\r\nconst App = () => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <CssBaseline />\r\n        <ClippedDrawer />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}